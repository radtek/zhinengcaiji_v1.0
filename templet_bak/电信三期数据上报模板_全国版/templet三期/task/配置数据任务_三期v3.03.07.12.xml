<?xml version="1.0" encoding="utf-8" ?>
<config>
	<include>
       <property name="mapping">mapping.xml</property>
       <property name="loop">false</property>
    </include>
	<!-- 100: db 200:file(200:local file , 201: ftp file) 300:socket 400:others -->
	<ds id="1" type="100">
		<property name="url">jdbc:oracle:thin:@132.228.39.97:1521:NOAP1</property>
		<property name="driver">oracle.jdbc.driver.OracleDriver</property>
		<property name="username">noap</property>
		<property name="password">uwaysoft2009</property>
	</ds>
	<!-- to 与  resolve 是一对多关系, package为可选标签 -->

	<to id="1">
		<resolve dsid="1">
			<mapping name="${province_en}_CONF_MSC_%%Y%%M%%D.csv" templet="配置数据模板_三期.ftl"   >  
				<sql>
					select '%%Y-%%M-%%D' as 时间戳,
       MSC.MSC_NAME as MSC标识,
       '' as 外部网元标识,
       '${province_cn}' as 省份名称,
       MSC.MSC_CITYNAME as 城市列表,
       (case MSC.vendor
         when 'ZY0808' then
          '华为'
         when 'ZY0810' then
          '阿朗'
         when 'ZY0804' then
          '中兴'
       end) as 厂家名称,
       '' as 软件版本,
       '' as 硬件版本,
       '' as 设备名称,
       MSC.MSC_CHNAME as 设备中文名称,
       '' as 规格型号,
       '' as 机房位置,
       MSC_ID as MSCID,
       '' as SID,
       '' as NID,
       '' as IP地址,
       '' as 信令点编码,
       '' as 配置信令链路数,
       '' as 配置中继数,
       MSC.BSC_COUNT as 目前管辖BSC数,
       '' as 备注,
       '' as 预留字段1,
       '' as 预留字段2,
       '' as 预留字段3,
       '' as 预留字段4,
       '' as 预留字段5
  from 
 (select  a.VENDOR, a.RELATED_MSC,replace(wmsys.wm_concat(distinct case when  b.CITY_NAME = '江汉' then 'XT,TM,QJ' else  b.ENNAME end), ',', '|') ||'_'||a.MSC_NAME as MSC_NAME, 
       replace(wmsys.wm_concat(distinct case when  b.CITY_NAME = '江汉' then '仙桃,潜江,天门' else  b.CITY_NAME end), ',', '|') ||'_'||a.MSC_NAME as MSC_CHNAME,
       replace(wmsys.wm_concat(distinct case when  b.CITY_NAME = '江汉' then '仙桃,潜江,天门' else  b.CITY_NAME end), ',', '|') as MSC_CITYNAME,
       count(1) as BSC_COUNT,MSC_ID
from ne_bsc_c a, cfg_city b 
where a.city_id = b.city_id 
GROUP BY a.VENDOR,a.RELATED_MSC,a.MSC_NAME,MSC_ID) MSC
					
					
					</sql>
			</mapping>
		<mapping name="${province_en}_CONF_BSC_%%Y%%M%%D.csv" templet="配置数据模板_三期.ftl"   >  
				<sql>
					
					select '%%Y-%%M-%%D' as 时间戳,
       case BSC.VENDOR
         when 'ZY0808' THEN
          MSC.MSC_NAME || '.' || BSC.CHINA_NAME
         when 'ZY0810' THEN
          MSC.MSC_NAME || '.' || BSC.BSC_ID
         whEN 'ZY0804' THEN
          BSC.CHINA_NAME
         ELSE
          MSC.MSC_NAME || '.' || BSC.CHINA_NAME
       END as BSC标识,
       '' as 外部网元标识,
       '${province_cn}' as 省份,
       CELL.CITY_NAME as 城市列表,
       MSC.MSC_NAME as MSC标识,
       '' as MGW标识,
       case BSC.vendor when 'ZY0808' THEN '华为' when 'ZY0810' THEN '阿朗' when 'ZY0804' THEN '中兴' end as 厂家名称,
       '' as 软件版本,
       '' as 设备名称,
       BSC.CHINA_NAME as 设备中文名称,
       '' as 规格型号,
       '' as 无线容量,
       '' as 设计无线容量,
       '' as 基站容量,
       '' as 扇区容量,
       '' as 设计的BHCA值,
       BTS.BTS_NUM as 基站数量,
       '' as "1X基站数量",
       '' as DO基站数量,
       CELL.CELL_NUM as 扇区数量,
       '' as PCF数量,
       '' as 机房位置,
       '' as 机房名称,
       '' as 经度,
       '' as 纬度,
       '' as 备注,
       '' as 预留字段1,
       '' as 预留字段2,
       '' as 预留字段3,
       '' as 预留字段4,
       '' as 预留字段5
  from NE_BSC_C BSC, 
  (select  a.RELATED_MSC, replace(wmsys.wm_concat(distinct case when  b.CITY_NAME = '江汉' then 'XT,TM,QJ' else  b.ENNAME end), ',', '|') ||'_'||a.MSC_NAME as MSC_NAME, 
       replace(wmsys.wm_concat(distinct case when  b.CITY_NAME = '江汉' then '仙桃,潜江,天门' else  b.CITY_NAME end), ',', '|') ||'_'||a.MSC_NAME as MSC_CHNAME
from ne_bsc_c a, cfg_city b 
where a.city_id = b.city_id 
GROUP BY a.RELATED_MSC,a.MSC_NAME) MSC,
(select RELATED_BSC,count(1) CELL_NUM, replace(wmsys.wm_concat(distinct case when CITY_NAME = '江汉' then county_name else CITY_NAME end), ',', '|') CITY_NAME  from ne_CELL_c  group by related_bsc) CELL,
(SELECT RELATED_BSC,COUNT(1) BTS_NUM FROM NE_BTS_C GROUP BY RELATED_BSC) BTS
 where BSC.RELATED_MSC = MSC.RELATED_MSC
 AND BSC.NE_SYS_ID=BTS.RELATED_BSC
 and BSC.NE_SYS_ID=CELL.RELATED_BSC
 order by BSC.city_id, BSC.ne_sys_id
 
					
					</sql>
			</mapping>
			
			
			<mapping name="${province_en}_CONF_BTS_%%Y%%M%%D.csv" templet="BTS数据模板_三期.ftl"    before="1">
				<sql>
					
					select '%%Y-%%M-%%D' as "时间戳",
       case BTS.vendor
         when 'ZY0808' then
          MSC.MSC_NAME || '.' || BTS.BSC_Name || '.' || BTS.BTS_ID
         when 'ZY0804' then
          BTS.BSC_Name || '.' || BTS.BTS_ID
         when 'ZY0810' then
          MSC.MSC_NAME || '.' || BTS.BSC_ID || '.' || BTS.BTS_ID
         else
          MSC.MSC_NAME || '.' || BTS.BSC_Name || '.' || BTS.BTS_ID
       end as "基站标识",
       '' as "外部网元标识",
       bts.bts_id as "站号",
       '' as "工程站号",
       bts.equip_name as "基站设备名称",
       replace(bts.china_name, ',', '.') as "基站中文名",
       '' as "基站拼音",
       '' as "基站别名",
       '${province_cn}' as "省份",
       case BTS.CITY_NAME when '江汉' then BTS.COUNTY_NAME ELSE BTS.CITY_NAME END as "城市",
       replace(BTS.County_Name, '区', '') as "行政归属",
       '' as "地理归属",
       MSC.MSC_NAME as "MSC标识",
       '' as "MGW标识",
       case BTS.vendor
         when 'ZY0808' then
          MSC.MSC_NAME || '.' || BTS.BSC_Name 
         when 'ZY0804' then
          BTS.BSC_Name
         when 'ZY0810' then
          MSC.MSC_NAME || '.' || BTS.BSC_ID 
         else
          MSC.MSC_NAME || '.' || BTS.BSC_Name
       end as "BSC标识",
       case BTS.vendor
         when 'ZY0808' THEN
          '华为'
         when 'ZY0810' THEN
          '阿朗'
         when 'ZY0804' THEN
          '中兴'
       end as "厂家名称",
       case BTS.vendor
         when 'ZY0808' then
          'BSC6680'
         when 'ZY0804' then
          'V8'
         when 'ZY0810' then
          'R32'
         else
          'softVersion'
       end as "软件版本",
       BTS.EQUIP_MODEL as "设备型号",
       '' as "基站等级",
       BTS.LAC as "LAC",
       '' as "REG_ZONE",
       '' as "BSID",
       '' as "NID",
       BTS.SID as "SID",
       cell.CELL_NUM as "扇区数量",
       carr.CARR_1X as "1X载扇数量",
       carr.CARR_DO as "DO载扇数量",
       '' as "1X CE数量",
       '' as "DO CE数量",
       '' as "分配ABIS口E1电路数量",
       1 as "基站类型",
       case
         when (carr.bus_1x + carr.bus_do) = 2 then
          1
         else
          case
            when carr.bus_1x = 1 then
             0
            else
             2
          end
       end as "系统类型",
       '' as "延伸覆盖类型",
       '' as "天线方向类型",
       '' as "1X站型配置",
       '' as "DO站型配置",
       tai.project_stat as "工程状态",
       tai.STATE as "运行状态",
       to_char(tai.STATE_JUGDE_TIME,'YYYY-MM_DD') as "运行状态判断时间",
       to_char(tai.ACTIVIATION_TIME,'YYYY-MM_DD') as "基站开通日期",
       tai.DESIGN_UNIT as "设计院",
       '' as "设计期别",
       tai.MAINTAIN_UNIT as "代维单位",
       tai.MAINTAINER as "维护人",
       tai.MAINTAINER_PHONE as "维护人电话",
       tai.MARKETING_AREA as "营销区域",
       '' as "覆盖区域描述",
       tai.SHARED_WITH as "共站情况",
       substr(replace(BTS.ADDRESS, ',', '.'), 0, 30) as "站址",
       tai.OUTSIDE_REPEATER_NUM as "带室外直放站数量",
       BTS.LONGITUDE as "经度",
       BTS.LATITUDE as "纬度",
       case tai.border_type
         when '非边界' then
          0
         when '省际边界' then
          1
         when '省内边界' then
          2
         when '同为省际省内边界' then
          3
       end as "边界基站类型",
       tai.POLER_TYPE as "塔桅类型",
       tai.CAGE_TYPE as "机柜类型",
       tai.WIRE_LOAD as "无线容量",
       tai.WIRE_LOAD_P as "设计无线容量",
       '' as "最大发射功率",
       tai.ENVIRTYPE as "环境类型",
       BTS.ARCHITECTURE as "建筑类型",
       tai.POWER_APPLY_TYPE as "电源",
       tai.TRANSFERS as "传输方式",
       tai.GROUND_TRANS_DEV as "传输设备",
       tai.ISRELATED as "是否级联",
       tai.SITE_IS_INDOOR as "是否室内",
       '' as "厂商侧BSC编号",
       '' as "厂商侧SITE编号",
       '' as "备注",
       '' as "预留字段1",
       '' as "预留字段2",
       '' as "预留字段3",
       '' as "预留字段4",
       '' as "预留字段5"

  FROM NE_BTS_C BTS,ne_taizhang_bts tai,
         (SELECT RELATED_BTS,COUNT(1) CELL_NUM FROM NE_CELL_C GROUP BY RELATED_BTS) CELL,
       (select  a.RELATED_MSC, replace(wmsys.wm_concat(distinct case when  b.CITY_NAME = '江汉' then 'XT,TM,QJ' else  b.ENNAME end), ',', '|') ||'_'||a.MSC_NAME as MSC_NAME,
       replace(wmsys.wm_concat(distinct case when  b.CITY_NAME = '江汉' then '仙桃,潜江,天门' else  b.CITY_NAME end), ',', '|') ||'_'||a.MSC_NAME as MSC_CHNAME
from ne_bsc_c a, cfg_city b 
where a.city_id = b.city_id 
GROUP BY a.RELATED_MSC,a.MSC_NAME) MSC,
       (select related_bts, MAX(decode(bustype,'1X',1,0)) as BUS_1X, MAX(decode(bustype,'DO',1,0)) as BUS_DO,SUM(decode(bustype,'1X',1,0)) as CARR_1X, SUM(decode(bustype,'DO',1,0)) as CARR_DO
 from ne_carrier_c
  group by related_bts) carr
 WHERE BTS.longitude is not null
   and BTS.latitude is not null
   and BTS.longitude &gt;74 and BTS.latitude &gt;3 and BTS.longitude &lt;135 and BTS.latitude &lt;53 
   AND tai.city_id = BTS.city_id
   AND tai.bsc_id = BTS.bsc_id
   AND tai.bts_id = BTS.bts_id
   and  BTS.RELATED_MSC = MSC.RELATED_MSC AND bts.ne_sys_id = carr.related_bts AND BTS.NE_SYS_ID = CELL.RELATED_BTS 
order by BTS.city_id, BTS.RELATED_BSC, BTS.BTS_ID


</sql>
			</mapping>
			<mapping name="${province_en}_CONF_SECTOR_%%Y%%M%%D.csv" templet="SECTOR数据模板_三期.ftl"   >  
				<sql>
						<![CDATA[     
						
select "时间戳",
"扇区标识",
"外部网元标识",
"省份",
"地市",
"行政区",
"乡镇",
"地理归属",
"OMCOID",
"所属RNC标识",
"所属SM标识",
"基站中文名",
"厂商侧基站标识",
"厂商侧扇区标识",
"厂商侧sector编号",
"扇区标识_1X",
"扇区标识_DO",
"扇区中文名",
"扇区BSID_1X",
"扇区BSID_DO",
"经度",
"纬度",
"PN",
"扇区类型",
"是否室内",
"是否RRU扇区",
"是否为多RRU共PN扇区",
"是否功分扇区",
"扇区等级",
"语音设计无线容量(Erl)",
"1X数据设计无线容量(Erl)",
"设计无线容量",
"MSC标识",
"MGW标识",
"BSC标识",
"BTS标识",
"LAC",
"TOTZONES",
"ZONE_TMR",
"开通日期",
"工程状态",
"运行状态",
"运行状态判断时间",
"天线经度",
"天线纬度",
"天线海拔高度",
"山高或楼高(米)",
"天线挂高(米)",
"天线总挂高",
"天线方向角",
"天线俯仰角",
"预置电下倾角（度）",
"可调电下倾角（度）",
"电子下倾角",
"机械倾角",
"天线是否可以电调",
"天线方向类型",
"天线型号",
"天线制造厂商",
"天线数量",
"天线分集方式",
"天线极化方式",
"天线功率(dBm)",
"天线增益(dBi)",
"天线架设方式",
"天线平台",
"天线水平3db波瓣宽度",
"天线垂直3db波瓣宽度",
"是否扇区分裂",
"天馈共用方式",
"馈线类型",
"馈线长度",
"基站型号",
"基站扇区数",
"所属厂家",
"软件版本",
"1X载扇数量",
"1X信道板配置类型",
"1X信道板数量",
"1X信道配置数",
"1X站型配置",
"系统类型",
"是否DO扇区",
"DO载扇数量",
"DO信道板配置类型",
"DO信道板配置数量",
"DO信道配置数",
"DO站型配置",
"是否分频待机",
"是否多载波边界",
"边界扇区类型",
"边界免漫游扇区类型",
"免漫游对端地市",
"接壤省份名称",
"接壤城市名称",
"所带直放站数量",
"到边界线的距离",
"所带分布系统数量",
"是否使用伪导频",
"伪导频频点",
"37载频配置",
"283载频配置",
"78载频配置",
"119载频配置",
"160载频配置",
"201载频配置",
"242载频配置",
"是否安装塔顶放大器",
"是否安装基站放大器",
"环境类型",
"环境描述",
"场景类型1",
"场景类型2",
"场景类型3",
"场景描述",
"建筑类型",
"所属机房名称",
"机房所在楼层",
"所属营业部名称",
"扇区地址",
"网元负责人",
"网元负责人联系手机号码",
"网元负责人邮箱",
"地址",
"数据最后更新时间",
"备注",
"预留1",
"预留2",
"预留3",
"预留4",
"预留5"
from (
select '%%Y-%%M-%%D' as "时间戳",
       case SECTOR.vendor
         when 'ZY0808' then
          MSC.MSC_NAME || '.' || SECTOR.BSC_Name || '.' || SECTOR.local_cell_id || '.' ||
          SECTOR.SECTOR_ID
         when 'ZY0804' then
          SECTOR.BSC_Name || '.' || SECTOR.BTS_ID || '.' || SECTOR.SECTOR_ID
         when 'ZY0810' then
          MSC.MSC_NAME || '.' || SECTOR.BSC_ID || '.' || SECTOR.BTS_ID || '.' ||
          SECTOR.SECTOR_ID
         else
          MSC.MSC_NAME || '.' || SECTOR.BSC_Name || '.' || SECTOR.BTS_ID || '.' ||
          SECTOR.SECTOR_ID
       end as "扇区标识",
       tai.OUT_NE_ID as "外部网元标识",
       '${province_cn}' as "省份",
       SECTOR.CITY_NAME as "地市",
       replace(SECTOR.COUNTY_NAME, '区', '') as "行政区",
       tai.TOWN as 乡镇,
       tai.FROM_REGION as "地理归属",
       tai.omc_id as OMCOID,
       case SECTOR.vendor when 'ZY0810' then TAI.BSC_NAME else '无' end  as 所属RNC标识,
       case SECTOR.vendor when 'ZY0810' then tai.sm_id else '无' end as 所属SM标识,
       SECTOR.bts_name as 基站中文名,
       tai.bts_id as "厂商侧基站标识",
       case SECTOR.vendor
         when 'ZY0808' then
          tai.SECTOR_ID
         when 'ZY0804' then
          tai.BTS_ID
         when 'ZY0810' then
          tai.SECTOR_ID
       end as "厂商侧扇区标识",
       case SECTOR.vendor
         when 'ZY0808' then
          tai.SECTOR_ID
         when 'ZY0804' then
          tai.SECTOR_ID
         when 'ZY0810' then
          tai.SECTOR_ID
       end as "厂商侧sector编号",
       case SECTOR.vendor
         when 'ZY0808' then
          replace('0x' ||
                  to_char(BTS.BTS_ID * 16 + SECTOR.SECTOR_ID, 'XXXXXXXX'),
                  ' ',
                  '')
         when 'ZY0804' then
          to_char(SECTOR.CI)
         when 'ZY0810' then
          replace('0x' ||
                  to_char(BTS.BTS_ID * 16 + SECTOR.SECTOR_ID, 'XXXXXXXX'),
                  ' ',
                  '')
       end as "扇区标识_1X",
       case SECTOR.vendor
         when 'ZY0808' then
          replace('0x' ||
                  to_char(BTS.BTS_ID * 16 + SECTOR.SECTOR_ID, 'XXXXXXXX'),
                  ' ',
                  '')
         when 'ZY0804' then
          to_char(SECTOR.CI)
         when 'ZY0810' then
          replace('0x' ||
                  to_char(BTS.BTS_ID * 16 + SECTOR.SECTOR_ID, 'XXXXXXXX'),
                  ' ',
                  '')
       end as "扇区标识_DO",
       case SECTOR.vendor
         when 'ZY0808' then
          replace(SECTOR.CHINA_NAME, ',', '，')
         when 'ZY0804' then
          replace(SECTOR.CHINA_NAME, ',', '，')
         when 'ZY0810' then
          replace(SECTOR.CHINA_NAME, ',', '，')
       end as "扇区中文名",
       tai.BSID_1X as 扇区BSID_1X,
       tai.BSID_DO as 扇区BSID_DO,
       SECTOR.LONGITUDE as "经度",
       SECTOR.LATITUDE as "纬度",
       SECTOR.PN as "PN",
       DECODE(tai.SITE_TYPE,
              '1',
              '标准小区',
              '2',
              '微蜂窝',
              '3',
              'RRU',
              SECTOR.SITE_TYPE) as "扇区类型",
       DECODE(SECTOR.ISINDOOR, 0, '否', 1, '是') as "是否室内",
       DECODE(SECTOR.SITE_TYPE, '3', '是', '否') as "是否RRU扇区",
       tai.IS_PN_SHARED as "是否为多RRU共PN扇区",
       SECTOR.ISCELLSPLIT as "是否功分扇区",
       tai.station_grade as "扇区等级",
       TAI.ONEX_VOICE_WIRE_LOAD_P as "语音设计无线容量(Erl)",
       TAI.ONEX_DATA_WIRE_LOAD_P as "1X数据设计无线容量(Erl)",
       SECTOR.WIRE_LOAD_P as "设计无线容量",
       MSC.MSC_NAME as "MSC标识",
       tai.MGW_NAME as "MGW标识",
       case BTS.vendor
         when 'ZY0808' then
          MSC.MSC_NAME || '.' || SECTOR.BSC_Name
         when 'ZY0804' then
          SECTOR.BSC_Name
         when 'ZY0810' then
          MSC.MSC_NAME || '.' || SECTOR.BSC_ID
         else
          MSC.MSC_NAME || '.' || SECTOR.BSC_Name
       end as "BSC标识",
       case BTS.vendor
         when 'ZY0808' then
          MSC.MSC_NAME || '.' || SECTOR.BSC_Name || '.' || SECTOR.BTS_ID
         when 'ZY0804' then
          SECTOR.BSC_Name || '.' || SECTOR.BTS_ID
         when 'ZY0810' then
          MSC.MSC_NAME || '.' || SECTOR.BSC_ID || '.' || SECTOR.BTS_ID
         else
          MSC.MSC_NAME || '.' || SECTOR.BSC_Name || '.' || SECTOR.BTS_ID
       end as "BTS标识",
       tai.LAC as "LAC",
       tai.TOT_ZONES as Totzones,
       tai.ZONE_TMR as Zone_tmr,
       tai.OPEN_DATE as 开通日期,
       SECTOR.PROJECT_STATE as "工程状态",
       tai.state as 运行状态,
       tai.STATE_JUGDE_TIME as 运行状态判断时间,
       SECTOR.LONGITUDE as "天线经度",
       SECTOR.LATITUDE as "天线纬度",
       tai.ANTENNA_ALTITUDE as "天线海拔高度",
       tai.HIGH_OF_PYLON_BASE as "山高或楼高(米)",
       tai.ANT_HIGH as "天线挂高(米)",
       tai.ANTENNA_ALTITUDE+ tai.ANT_HIGH as "天线总挂高",
       tai.ANT_AZIMUTH as "天线方向角",
       TAI.ANT_ELECTRON_ANGLE + TAI.ANT_ENGINE_ANGLE as "天线俯仰角",
       tai.DEFAULT_ELE_ANGLE as "预置电下倾角（度）",
       tai.ADJ_ELE_ANGLE as "可调电下倾角（度）",
       tai.ANT_ELECTRON_ANGLE as "电子下倾角",
       tai.ANT_ENGINE_ANGLE  as "机械倾角",
       tai.ISELECADJUST as "天线是否可以电调",
       tai.ATENNA_DIRECTION_TYPE as "天线方向类型",
       tai.ANTENNA_MODEL as "天线型号",
       tai.ANTENNA_FACTORY as "天线制造厂商",
       tai.ANT_NUM as "天线数量",
       tai.ANTENNA_FJ_TYPE as "天线分集方式",
       tai.ANT_POLARIZE as "天线极化方式",
       tai.MAX_REQ_POWER as "天线功率(dBm)",
       tai.ANT_PLUS as "天线增益(dBi)",
       tai.ANT_SPAN as "天线架设方式",
       tai.FLOOR_NUM as "天线平台",
       tai.HORIZONTAL as "天线水平3db波瓣宽度",
       tai.VERTICAL as "天线垂直3db波瓣宽度",
       tai.ISCELLSPLIT as "是否扇区分裂",
       tai.CABLE_SHARE_TYPE as "天馈共用方式",
       tai.CABLE_TYPE as "馈线类型",
       tai.CABLE_LENGTH as "馈线长度",
       tai.HARDWARE_TYPE as "基站型号",
       tai.SECTOR_CNT as "基站扇区数",
       case SECTOR.vendor
         when 'ZY0808' THEN
          '华为'
         when 'ZY0810' THEN
          '阿朗'
         when 'ZY0804' THEN
          '中兴'
       end as "所属厂家",
       case SECTOR.vendor
         when 'ZY0808' then
          'BSC6680'
         when 'ZY0804' then
          'V8'
         when 'ZY0810' then
          'R32'
       end as "软件版本",
       DECODE(tai.ISDO, '是', NULL, '否', tai.CARRIER_NUM) as "1X载扇数量",
       tai.ONEX_CHANNEL_TYPE as "1X信道板配置类型",
       tai.ONEX_CHANNEL_CNT as "1X信道板数量",
       tai.ONEX_RELIABLE_CNT as "1X信道配置数",
       tai.ONEX_MODEL as "1X站型配置",
       tai.RTT_SUPPORT_TYPE as "系统类型",
       tai.ISDO as "是否DO扇区",
       DECODE(tai.ISDO, '是', tai.CARRIER_NUM, '否', NULL) as "DO载扇数量",
       tai.DO_CHANNEL_TYPE as DO信道板配置类型,
       tai.DO_CHANNEL_CNT  as "DO信道板配置数量",
       tai.DO_RELIABLE_CNT as "DO信道配置数",
       tai.DO_SITE_BUIDING_TYPE as "DO站型配置",
       tai.FPDJ as 是否分频待机,
       tai.BORDERSECTOR as "是否多载波边界",
       case tai.border_type
         when '非边界' then
          0
         when '省际边界' then
          1
         when '省内边界' then
          2
         when '同为省际省内边界' then
          3
       end as "边界扇区类型",
       tai.IS_ACCOUNTING_ROAM as 边界免漫游扇区类型,
       tai.ACCOUNTING_ROAM_CITY_LIST as 免漫游对端地市,
       tai.nbr_province_name as "接壤省份名称",
       tai.nbr_city_name as "接壤城市名称",
       tai.REPEATER_CNT as 所带直放站数量,
       tai.DISTANCE_TO_BORDER as 到边界线的距离,
       tai.DIS_SYS_CNT as 所带分布系统数量,
       tai.IS_BEACON_USED as "是否使用伪导频",
       tai.FAKEPILOT as "伪导频频点",
       tai.REQ_37_CONF as "37载频配置",
       tai.REQ_283_CONF as "283载频配置",
       tai.REQ_78_CONF as "78载频配置",
       tai.REQ_119_CONF as "119载频配置",
       tai.REQ_160_CONF as "160载频配置",
       tai.REQ_201_CONF as "201载频配置",
       tai.REQ_242_CONF as "242载频配置",
       tai.ISTOWER as "是否安装塔顶放大器",
       tai.ISAMPLIFIER as "是否安装基站放大器",
       tai.COVER_REGION as "环境类型",
       tai.COVER_REGION_DES as "环境描述",
       tai.COVER_REGION_1 as "场景类型1",
       tai.COVER_REGION_2 as "场景类型2",
       tai.COVER_REGION_3 as "场景类型3",
       tai.SCENE_INFO as "场景描述",
       tai.SITE_BUIDING_TYPE as "建筑类型",
       tai.ENGINE_ROOM_NAME as 所属机房名称,
       tai.FLOOR_NUM_OF_EROOM as 机房所在楼层,
       tai.BHALL_NAME as 所属营业部名称,
       TAI.SECTOR_ADDR as 扇区地址,
       tai.STAFF_NAME as 网元负责人,
       tai.STAFF_MOBILE as 网元负责人联系手机号码,
       tai.STAFF_EMAIL as 网元负责人邮箱,
       BTS.ADDRESS as "地址",
       tai.update_time as 数据最后更新时间,
       tai.REMARK as "备注",
       tai.RESERVE_FIELD1 as "预留1",
       tai.RESERVE_FIELD2 as "预留2",
       tai.RESERVE_FIELD3 as "预留3",
       tai.RESERVE_FIELD4 as "预留4",
       tai.RESERVE_FIELD5 as "预留5",
       row_number() over(partition by tai.CITY_NAME, tai.VENDOR, tai.bsc_id,tai.bts_id,tai.sector_id,tai.local_cell_id,tai.china_name order by tai.RADIO_CHANNEL asc) as rank_id
  from ne_cell_c sector,
       ne_taizhang_cell tai,
       ne_bts_c bts,
       (select a.RELATED_MSC,
               replace(wmsys.wm_concat(distinct case
                                         when b.CITY_NAME = '江汉' then
                                          'XT,TM,QJ'
                                         else
                                          b.ENNAME
                                       end),
                       ',',
                       '|') || '_' || a.MSC_NAME as MSC_NAME 
          from ne_bsc_c a, cfg_city b
         where a.city_id = b.city_id
         GROUP BY a.RELATED_MSC, a.MSC_NAME ) MSC

 where sector.related_bts = bts.ne_sys_id
   and sector.related_msc = msc.related_msc
   and sector.city_id = tai.city_id(+)
   and sector.bsc_id = tai.bsc_id(+)
   and sector.Bts_Id = tai.bts_id(+)
   and sector.sector_id = tai.sector_id(+)
   and (sector.vendor <> 'ZY0808' or
       (sector.vendor = 'ZY0808' and
       sector.local_cell_id = tai.local_cell_id)) 
) where rank_id =1 
order by 1,4,5,2

			   	]]>		
					
					</sql>
			</mapping>
			<mapping name="${province_en}_CONF_WLANHP_%%Y%%M%%D.csv" templet="WLANHP数据模板.ftl">
				<sql>select '%%Y-%%M-%%D' as "时间戳", HOT.HOTMARK as "热点标识",
       '${province_cn}' as "省份名称",
       CITY.CITY_NAME as "城市名称",
       HOT.HOTNAME as "热点名称",
       HOT.HOTADDR as "热点地址",
       HOT.LONGITUDE as "热点经度",
       HOT.LATITUDE as "热点纬度",
       HOT.HOTUSEAPNUM as "热点使用的AP数量",
       HOT.HOTUSEACNUM as "热点使用的AC数量",
       (select distinct fullname from (select case a.vendor
         when 'ZY0808' then
          b.enname || '_' || a.omc_name || '.' || a.bsc_name || '.' || a.bts || '.' ||
          a.cell
         when 'ZY0804' then
          a.bsc_name || '.' || a.bts || '.' || a.cell
         when 'ZY0810' then
          b.enname || '_' || a.omc_name || '.' || a.bsc_name || '.' || a.bts || '.' ||
          a.cell
       end as fullname,
       a.ne_cell_id
  from cfg_map_dev_to_ne a, cfg_city b
 where a.city_id = b.city_id) aa where aa.ne_cell_id=to_char(HOT.CELLIDONE))
        as "覆盖区关联EVDO扇区信息1",
      (select distinct fullname from (select case a.vendor
         when 'ZY0808' then
          b.enname || '_' || a.omc_name || '.' || a.bsc_name || '.' || a.bts || '.' ||
          a.cell
         when 'ZY0804' then
          a.bsc_name || '.' || a.bts || '.' || a.cell
         when 'ZY0810' then
          b.enname || '_' || a.omc_name || '.' || a.bsc_name || '.' || a.bts || '.' ||
          a.cell
       end as fullname,
       a.ne_cell_id
  from cfg_map_dev_to_ne a, cfg_city b
 where a.city_id = b.city_id) aa where aa.ne_cell_id=to_char(HOT.CELLIDTWO)) as "覆盖区关联EVDO扇区信息2",
      (select distinct fullname from (select case a.vendor
         when 'ZY0808' then
          b.enname || '_' || a.omc_name || '.' || a.bsc_name || '.' || a.bts || '.' ||
          a.cell
         when 'ZY0804' then
          a.bsc_name || '.' || a.bts || '.' || a.cell
         when 'ZY0810' then
          b.enname || '_' || a.omc_name || '.' || a.bsc_name || '.' || a.bts || '.' ||
          a.cell
       end as fullname,
       a.ne_cell_id
  from cfg_map_dev_to_ne a, cfg_city b
 where a.city_id = b.city_id) aa where aa.ne_cell_id=to_char(HOT.CELLIDTHREE)) as "覆盖区关联EVDO扇区信息3",
       '' as "预留字段1",
       '' as "预留字段2",
       '' as "预留字段3",
       '' as "预留字段4",
       '' as "预留字段5"
  from ne_uway_hotdatacollect hot, cfg_city city
 where hot.city_id = city.city_id
   and HOT.HOTMARK is not null
</sql>
			</mapping>
			<mapping name="${province_en}_CONF_BLINDPOINT_%%Y%%M%%D.csv" templet="配置数据模板.ftl">
				<sql>
select '%%Y-%%M-%%D' as "时间戳", BLIND.BLINDID as "盲点标识", '${province_cn}' as "省份名称", CITY.CITY_NAME as "城市名称", BLIND.BLINDADDRESS as "盲点详细地点", BLIND.SERIAL_ID as "盲点序号", BLIND.CREATETIME as "加入日期", BLIND.BLINDAREAID as "盲区编号", BLIND.BLINDNAME as "盲区名称", BLIND.BLINDPROPERTYCITY as "盲点所属县市", BLIND.BLINDPROPERTYCITYTOWN as "盲点所属乡镇", BLIND.BLINDADDNAME as "盲点地点别名", BLIND.MARKBUILD as "标志性建筑", BLIND.BLINDLEVEL as "盲点级别", BLIND.LONGITUDE as "盲点经度", BLIND.LATITUDE as "盲点纬度", BLIND.AREATYPE as "盲点区域类型", BLIND.BLINDINOROUT as "盲点室内外分布", BLIND.IS1XBLIND as "是否1x盲区", BLIND.ISDOCELL as "是否DO盲区", BLIND.FORMREASON as "形成原因", BLIND.RADIUS as "影响半径", BLIND.SETPLAN as "解决方案", BLIND.ISHASPLAN as "是否有规划", BLIND.PLANSITE as "规划站名", BLIND.PLANSITELONGITUDE as "规划站经度", BLIND.PLANSITELATITUDE as "规划站纬度", BLIND.PLANADDRESS as "规划详细地址", BLIND.PLANINDOROUT as "规划站室内外分布", BLIND.EQUIPMENTTYPE as "规划站设备类型", BLIND.ONEXDEPLOY as "1X配置", BLIND.DODEPLOY as "DO配置", BLIND.BUILDREASON as "建站理由简述", BLIND.PUTONLIST as "列入几期规划", BLIND.PLANBUILDTIME as "计划建站时间", BLIND.FILLINMAN as "填报人", TO_CHAR(BLIND.FILLTIME,'YYYY-MM-DD HH24:MI:SS') as "填报时间", BLIND.RESOLVE as "解决进度", TO_CHAR(BLIND.SETTIME,'YYYY-MM-DD HH24:MI:SS') as "解决时间", BLIND.LASTSETPLAN as "最终解决方案", '' as "预留字段1", '' as "预留字段2", '' as "预留字段3", '' as "预留字段4", '' as "预留字段5" 
  from ne_uway_blindinfor blind, cfg_city city where blind.city_id = city.city_id</sql>
			</mapping>
		</resolve>
	</to>
	
	<!-- 传输接口, 当只有path属性在时候为本地接口，其他则为远程接口 -->
	<ti id="1" after="1">
		<property name="ftpip">127.0.0.1</property>
		<property name="port">21</property>
		<property name="username">test</property>
		<property name="password">test</property>
		<property name="path">/CONF/</property><!--可以配置通配符HUB/WORK/-->
		<property name="encode">utf-8</property>
        </ti>
	<t>
		<action id="1" toid="1" tiid="1" strategyid="1"/><!--?????-->
	</t>
	
	<!-- 默认失败不处理  0:正常   1:   2: -->
	<strategy id="1">
		<property name="failure">1,2,3</property>
	</strategy>
	
	<!-- before ,after ,exception -->
	<trigger id="11" class="cn.uway.nbi.task.triggerc.UpdateBean" />
</config>