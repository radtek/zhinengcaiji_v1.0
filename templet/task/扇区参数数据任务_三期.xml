<?xml version="1.0" encoding="utf-8" ?>
<config>
	<include>
       <property name="mapping">mapping.xml</property>
       <property name="loop">false</property>
    </include>
	<!-- 100: db 200:file(200:local file , 201: ftp file) 300:socket 400:others -->
			<ds id="1" type="100">
		<property name="url">jdbc:oracle:thin:@132.228.39.97:1521:NOAP1</property>
		<property name="driver">oracle.jdbc.driver.OracleDriver</property>
		<property name="username">noap</property>
		<property name="password">uwaysoft2009</property>
	</ds>

	<!-- to 与  resolve 是一对多关系, package为可选标签 -->

	<to id="1">
		<resolve dsid="1">		
			<!--华为扇区1X省接口-->
    <mapping name="${province_en}_PARA_SECTOR_HW_1X_%%Y%%M%%D.csv" templet="华为扇区1X省接口_三期.ftl"   >  
				<sql>
					SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr,CC.NE_SYS_ID,
                CS.PROVINCENAME,
                CC.CITY_NAME,
                CC.RELATED_MSC,
                NULL,
                CC.RELATED_BSC,
                CC.RELATED_BTS,
                CC.SECTOR_ID,
                CC.CHINA_NAME,
                PRAT
  FROM NE_CELL_C CC, 
       CLT_CM_CELL_SCTSCHM_HW CSH, 
       CFG_CITY_SID CS
 WHERE CC.CITY_ID || CC.BSC_ID = CSH.OMCID(+)
   AND CC.BTS_ID = CSH.CN(+)
   AND CC.SECTOR_ID = CSH.SCTID(+)
   AND TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS') = CSH.STAMPTIME(+)
   AND CC.VENDOR = 'ZY0808'
   AND CC.CITY_ID = CS.CITYID(+)
					</sql>
			</mapping>
			<!--中兴扇区1X省接口-->
    <mapping name="${province_en}_PARA_SECTOR_ZTE_1X_%%Y%%M%%D.csv" templet="中兴扇区1X省接口_三期.ftl">
				<sql>SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr, CC.NE_SYS_ID,
                CS.PROVINCENAME,
                CC.CITY_NAME,
                CC.RELATED_MSC,
                NULL,
                CC.RELATED_BSC,
                CC.RELATED_BTS,
                CC.SECTOR_ID,
                CC.CHINA_NAME,

                RADIUS, --  小区半径123
                TOTAL_ZONES, --  被保持的登记区域数
                ZONE_TIMER, --  区域定时器长度
                MULT_SIDS, --  多个SID存储指示
                MULT_NIDS, --  多个NID存储指示
                HOME_REG, --  归属登记指示
                FOR_SID_REG, --  SID漫游用户登记指示
                FOR_NID_REG, --  NID漫游用户登记指示
                POWER_UP_REG, --  开机登记指示
                POWER_DOWN_REG, --  关机登记指示
                PARAMETER_REG, --  参数变化登记指示
                REG_PRD, --  登记周期
                REG_DIST, --  登记距离
                MAX_SLOT_CYCLE_INDEX, --  最大时隙周期指数
                BCAST_INDEX, --  广播时隙周期指数
                PWR_REP_THRESH, --  功率控制报告门限
                PWR_REP_FRAMES, --  功率控制报告帧计数
                PWR_THRESH_ENABLE, --  门限报告模式指示
                PWR_PERIOD_ENABLE, --  定期报告模式指示
                PWR_REP_DELAY, --  功率报告延迟
                RLGAIN_TRAFFIC_PILOT, --  业务信道（含FCH和SCH）相对导频的增益调整
                RLGAIN_SCH_PILOT, --  补充信道相对导频的增益调整
                T_ADD_VOICE, --  语音业务导频加入门限
                T_ADD_DATA, --  数据业力导频加入门限
                T_DROP_VOICE, --  语音业务导频去掉门限
                T_DROP_DATA, --  数据业力导频去掉门限
                T_COMP_VOICE, --  语音业务有效导引集和候选导引集比较门限
                T_COMP_DATA, --  数据业务有效导引集和候选导引集比较门限
                T_TDROP_VOICE, --  语音业务去掉导引信号定时器值
                T_TDROP_DATA, --  数据业务去掉导引信号定时器值
                SOFT_SLOPE_VOICE, --  语音业务软切换斜率
                SOFT_SLOPE_DATA, --  数据业务软切换斜率
                ADD_INTERCEPT_VOICE, --  语音业务软切换加入截距
                ADD_INTERCEPT_DATA, --  数据业务软切换加入截距
                DROP_INTERCEPT_VOICE, --  语音业务软切换去掉截距
                DROP_INTERCEPT_DATA, --  数据业务软切换去掉截距
                PILOT_INC, --  导引信号PN序列偏置增量
                SRCH_WIN_A, --  有效导引信号集和候选导引信号集搜索窗口大小
                SRCH_WIN_N, --  相邻导引信号集搜索窗口大小
                SRCH_WIN_R, --  剩余导引信号集搜索窗口大小
                NGHBR_MAX_AGE, --  相邻导引信号集最大AGE 值
                PAGECH_PRAT --  寻呼信道数据速率

  FROM NE_CELL_C CC,
       (SELECT DISTINCT OMCID,
                        SYSTEM,
                        CELLID,
                        RADIUS,
                        PILOT_INC,
                        SRCH_WIN_A,
                        SRCH_WIN_N,
                        SRCH_WIN_R,
                        NGHBR_MAX_AGE
          FROM CLT_CM_R_3G_T_CELL_ZTE
         WHERE STAMPTIME = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) TCZ,
       (SELECT DISTINCT OMCID,
                        SYSTEM,
                        CELLID,
                        TOTAL_ZONES,
                        ZONE_TIMER,
                        MULT_SIDS,
                        MULT_NIDS,
                        HOME_REG,
                        FOR_SID_REG,
                        FOR_NID_REG,
                        POWER_UP_REG,
                        POWER_DOWN_REG,
                        PARAMETER_REG,
                        REG_PRD,
                        REG_DIST,
                        MAX_SLOT_CYCLE_INDEX,
                        BCAST_INDEX,
                        PAGECH_PRAT
          FROM CLT_CM_R_3G_T_SYS_PARA_ZTE
         WHERE STAMPTIME = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) SPZ,
       (SELECT DISTINCT OMCID,
                        SYSTEM,
                        CELLID,
                        PWR_REP_THRESH,
                        PWR_REP_FRAMES,
                        PWR_THRESH_ENABLE,
                        PWR_PERIOD_ENABLE,
                        PWR_REP_DELAY
          FROM CLT_CM_ZTE_R_3G_T_PWR_REP
         WHERE STAMPTIME = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) TPR,
       (SELECT DISTINCT OMCID,
                        --SYSTEM,
                        --CELLID,
                        RLGAIN_TRAFFIC_PILOT,
                        RLGAIN_SCH_PILOT
          FROM CLT_CM_ZTE_R_3G_S_GAIN
         WHERE STAMPTIME = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) SG,
       (SELECT DISTINCT OMCID,
                        SYSTEM,
                        CELLID,
                        T_ADD_VOICE,
                        T_ADD_DATA,
                        T_DROP_VOICE,
                        T_DROP_DATA,
                        T_COMP_VOICE,
                        T_COMP_DATA,
                        T_TDROP_VOICE,
                        T_TDROP_DATA,
                        SOFT_SLOPE_VOICE,
                        SOFT_SLOPE_DATA,
                        ADD_INTERCEPT_VOICE,
                        ADD_INTERCEPT_DATA,
                        DROP_INTERCEPT_VOICE,
                        DROP_INTERCEPT_DATA
          FROM CLT_CM_R_3G_T_HANDOFF_ZTE
         WHERE STAMPTIME = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) THZ,
       CFG_CITY_SID CS
 WHERE CC.CITY_ID || CC.BSC_ID = TCZ.OMCID(+)
   AND CC.BTS_ID = TCZ.SYSTEM(+)
   AND CC.SECTOR_ID = TCZ.CELLID(+)
   AND CC.CITY_ID || CC.BSC_ID = SPZ.OMCID(+)
   AND CC.BTS_ID = SPZ.SYSTEM(+)
   AND CC.SECTOR_ID = SPZ.CELLID(+)
   AND CC.CITY_ID || CC.BSC_ID = TPR.OMCID(+)
   AND CC.BTS_ID = TPR.SYSTEM(+)
   AND CC.SECTOR_ID = TPR.CELLID(+)
   AND CC.CITY_ID || CC.BSC_ID = THZ.OMCID(+)
   AND CC.BTS_ID = THZ.SYSTEM(+)
   AND CC.SECTOR_ID = THZ.CELLID(+)
   AND CC.CITY_ID || CC.BSC_ID = SG.OMCID(+)
   AND CC.VENDOR = 'ZY0804'
   AND CC.CITY_ID = CS.CITYID(+) 
					</sql>
			</mapping>
			
						<!--中兴扇区DO省接口-->
    <mapping name="${province_en}_PARA_SECTOR_ZTE_DO_%%Y%%M%%D.csv" templet="中兴扇区DO省接口_三期.ftl">
				<sql>
					SELECT DISTINCT TO_DATE('%%Y-%%M-%%D', 'YYYY-MM-DD'),
                CC.BSC_NAME||'.'||CC.BTS_ID||'.'||CC.SECTOR_ID  AS "扇区标识",
                CS.PROVINCENAME,
                CC.CITY_NAME,
                CC.MSC_NAME,
                NULL as "载扇所属MGW标识",
                CC.BSC_NAME,
                CC.BSC_NAME||'.'||CC.BTS_ID,
                CC.SECTOR_ID,
                CC.CHINA_NAME,
                  SEARCHWINDOWACTIVE,
                  SEARCHWINDOWNB,
                  SEARCHWINDOWREM,
                  PILOTADD1,
                  PILOTCOMPARE1,
                  PILOTDROP1,
                  PILOTDROPTIMER1,
                  SOFTSLOPE1,
                  ADDINTERCEPT1,
                  DROPINTERCEPT1
          FROM NE_CELL_C CC, 
               CLT_CM_R_H_S_HO_PARA_ZTE HPZ, 
               CFG_CITY_SID CS
         WHERE CC.CITY_ID || CC.BSC_ID = HPZ.OMCID(+)
           AND CC.BTS_ID = HPZ.SYSTEM(+)
           AND CC.SECTOR_ID = HPZ.CELLID(+)
           and CC.vendor = 'ZY0804'
           AND HPZ.STAMPTIME(+) =
               TO_DATE('%%Y%%M%%D %%H%%m%%S', 'YYYY-MM-DD HH24:MI:SS')
           AND CC.CITY_ID = CS.CITYID(+)

				</sql>
			</mapping>
		     <!--阿朗扇区1X省接口-->
    <mapping name="${province_en}_PARA_SECTOR_ALU_1X_%%Y%%M%%D.csv" templet="阿朗扇区1X省接口_三期.ftl">
				<sql>
					SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr, CC.NE_SYS_ID,
                CS.PROVINCENAME,
                CC.CITY_NAME,
                CC.RELATED_MSC,
                NULL,
                CC.RELATED_BSC,
                CC.RELATED_BTS,
                CC.SECTOR_ID,
                CC.CHINA_NAME,

                PILOT_GAIN, --  PILOT_GAIN
                PAGING_GAIN, --  寻呼信道增益
                SYNC_GAIN, --  同步信道增益
                FNIDREG, --  外部 NID 用户允许标志位
                MLTSIDSTR, --  多 SID 存储指示
                MLTNIDSTR, --  多 NID 存储指示
                NOM_PWR, --  接入信道初始标称功率
                INIT_PWR, --  接入信道初始功率偏置
                PWR_STEP, --  接入信道功率调整步长
                NUM_STEP, --  接入试探数
                ACC_TMO, --  接入信道响应等待时间
                MAX_REQ_SEQ, --  接入信道请求最大试探序列数
                MAX_RSP_SEQ, --  接入信道响应最大试探序列数
                MAX_CAP_SZ, --  接入信道试探消息实体长度
                PAM_SZ, --  接入信道试探前缀长度
                PROBE_PN_RAN, --  接入信道试探随机延迟
                PROBE_BKOFF, --  接入信道试探滞后范围
                BKOFF, --  接入信道试探序列滞后范围
                PWRREPFRAMES, --  PWR_REP_FRAMES
                T_ADD, --  T_ADD
                T_DROP, --  T_DROP
                T_COMP, --  T_COMP
                T_TDROP, --  T_TDROP
                SRCHWINA, --  SRCH_WIN_A
                SRCHWINN, --  SRCH_WIN_N
                SRCHWINR, --  SRCH_WIN_R
                PILOT_INC_MUX --  PILOT_INC_MUX
  FROM NE_CELL_C CC, 
       CLT_CM_LUC_CEQFACE CLC, 
       CFG_CITY_SID CS
 WHERE CC.VENDOR = 'ZY0810'
   AND CC.CITY_ID || CC.BSC_ID = CLC.OMCID(+)
   AND CC.CITY_ID = CS.CITYID(+)
   AND CLC.STAMPTIME(+) = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')
					</sql>
			</mapping>
			<!--阿朗扇区DO省接口-->
    <mapping name="${province_en}_PARA_SECTOR_ALU_DO_%%Y%%M%%D.csv" templet="阿朗扇区DO省接口_三期.ftl" before="1">
				<sql>
					SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr, CC.NE_SYS_ID,
                CS.PROVINCENAME,
                CC.CITY_NAME,
                CC.RELATED_MSC,
                NULL,
                CC.RELATED_BSC,
                CC.RELATED_BTS,
                CC.SECTOR_ID,
                CC.CHINA_NAME,

                DORMANCYTIMER,
                CCSYNCAPSULEOFFSET,
                CONTROLCHANNELRATE,
                PROBENUMSETUP,
                PREAMBLELENGTH,
                PROBEBACKOFF,
                CAPSULELENGTHMAX,
                OPENLOOPADJUST,
                PILOTCOMPARE,
                PILOTDROP,
                PILOTDROPTIMER,
                SOFTSLOPE,
                ADDINTERCEPT,
                DROPINTERCEPT,
                SEARCHWINDOWACTIVE,
                RABOFFSET
  FROM NE_CELL_C CC, 
       CLT_CM_LUC_DO_SECTOR LDS, 
       CFG_CITY_SID CS
 WHERE CC.CITY_ID || CC.BSC_ID = LDS.OMCID(+)
   AND CC.BTS_ID = LDS.CELLSITEID(+)
   AND CC.SECTOR_ID = SECTORID(+)
   AND CC.CITY_ID = CS.CITYID(+)
   AND LDS.STAMPTIME(+) = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')
					</sql>
			</mapping>
			<!--中兴BTS 1X省接口-->
    <mapping name="${province_en}_PARA_BTS_ZTE_1X_%%Y%%M%%D.csv" templet="中兴BTS_1X省接口_三期.ftl">
				<sql>SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr, BC.NE_SYS_ID,
                CS.PROVINCENAME,
                CS.CITYNAME,
                BC.RELATED_MSC,
                NULL MGM,
                BC.RELATED_BSC,
                ALLOWMINFSCHDURCODE,
                ALLOWMAXFSCHDURCODE
  FROM NE_BTS_C BC, 
       CLT_CM_ZTE_R_3G_T_FWDPOWER_1X TFX, 
       CFG_CITY_SID CS
 WHERE BC.CITY_ID || BC.BSC_ID = TFX.OMCID(+)
   AND TFX.SYSTEM(+) = BC.BTS_ID
   AND BC.VENDOR = 'ZY0804'
   AND STAMPTIME(+) = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')
   AND BC.CITY_ID = CS.CITYID(+)
   AND BC.VENDOR = 'ZY0804'
					</sql>
			</mapping>
			
						<!--阿朗BTS 1X省接口-->
    <mapping name="${province_en}_PARA_BTS_ALU_1X_%%Y%%M%%D.csv" templet="阿朗BTS_1X省接口_三期.ftl">
				<sql>
					SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr, BC.NE_SYS_ID,
                CS.PROVINCENAME,
                CS.CITYNAME,
                BC.RELATED_MSC,
                NULL MGM,
                BC.RELATED_BSC,
                ZONE_TMR,
                TOTZONES,
                HOMEREG,
                FSIDREG,
                PUPD_C
  FROM NE_BTS_C BC, 
       CLT_CM_LUC_CELL2 CLC, 
       CFG_CITY_SID CS
 WHERE BC.CITY_ID || BC.BSC_ID = CLC.OMCID(+)
   AND BC.VENDOR = 'ZY0810'
   AND STAMPTIME(+) = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')
   AND BC.CITY_ID = CS.CITYID(+) 
				</sql>
			</mapping>
		     <!--华为BSC 省接口-->
    <mapping name="${province_en}_PARA_BSC_HW_ALL_%%Y%%M%%D.csv" templet="华为BSC省接口_三期.ftl">
				<sql>
					SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr, BC.NE_SYS_ID,
                  CS.PROVINCENAME,
                  CS.CITYNAME,
                  BC.RELATED_MSC,
                  NULL MGM,
                  ACMACRODIVSW         BSC_CHM_ACMACRODIVSW,
                  PNINC                BSC_PNINC,
                  HHOMAXTARGNUM        BSC_BSCHO_HHOMAXTARGNUM,
                  BBH.INTRABSCHHOSW    BSC_BSCHO_INTRABSCHHOSW,
                  BBH.INTERBSCHHOSW    BSC_BSCHO_INTERBSCHHOSW,
                  HON.INTERBSCHHOSW    NBRBSCFUNC_INTERBSCHHOSW,
                  SCHRELDTXDUR         BSC_CHM_SCHRELDTXDUR,
                  SPT16XREVSCHSW       BSC_CHM_SPT16XREVSCHSW,
                  FWDSCH32XSW          BSC_CHM_FWDSCH32XSW,
                  REVSCH32XSW          BSC_CHM_REVSCH32XSW,
                  TRGARFCN             BSC_BSCRSM_TRGARFCN,
                  STRTIME              BSC_BSCRSM_STRTIME,
                  STOPTIME             BSC_BSCRSM_STOPTIME,
                  FWDSCHSHOSW          BSC_CHM_FWDSCHSHOSW,
                  REVSCHSHOSW          BSC_CHM_REVSCHSHOSW,
                  FWDSASTHR            BSC_CHM_FWDSASTHR,
                  FWDSASMAXNUM         BSC_CHM_FWDSASMAXNUM,
                  REVSASTHR            BSC_CHM_REVSASTHR,
                  REVSASMAXNUM         BSC_CHM_REVSASMAXNUM,
                  FWDSCHVARRATESW      BSC_CHM_FWDSCHVARRATESW,
                  REVSCHVARRATESW      BSC_CHM_REVSCHVARRATESW,
                  REVSCHEXTSW          BSC_CHM_REVSCHEXTSW,
                  REVSCHEXTFOREDURSW   BSC_CHM_REVSCHEXTFOREDURSW,
                  FWDSCHEXTSW          BSC_CHM_FWDSCHEXTSW,
                  RTT                  BSC_RLPBLOB_RTT,
                  NAKROUNDSFWD         BSC_RLPBLOB_NAKROUNDSFWD,
                  NAKROUNDSREV         BSC_RLPBLOB_NAKROUNDSREV,
                  NAKPERROUNDFWD0      BSC_RLPBLOB_NAKPERROUNDFWD0,
                  NAKPERROUNDFWD1      BSC_RLPBLOB_NAKPERROUNDFWD1,
                  NAKPERROUNDFWD2      BSC_RLPBLOB_NAKPERROUNDFWD2,
                  NAKPERROUNDREV0      BSC_RLPBLOB_NAKPERROUNDREV0,
                  NAKPERROUNDREV1      BSC_RLPBLOB_NAKPERROUNDREV1,
                  NAKPERROUNDREV2      BSC_RLPBLOB_NAKPERROUNDREV2,
                  QOSFUNSW             QOS_QOSFUNSW,
                  GOLDFSCHRATE         QOS_GOLDFSCHRATE,
                  GOLDRSCHRATE         QOS_GOLDRSCHRATE,
                  SILVERFSCHRATE       QOS_SILVERFSCHRATE,
                  SILVERRSCHRATE       QOS_SILVERRSCHRATE,
                  BRONZEFSCHRATE       QOS_BRONZEFSCHRATE,
                  BRONZERSCHRATE       QOS_BRONZERSCHRATE,
                  DATASW               QOS_DATASW,
                  SMOOTHPERIOD         SDU1XRLP_SMOOTHPERIOD,
                  SCHLOCKTHRESHOLD     SDU1XRLP_SCHLOCKTHRESHOLD,
                  SCHRETRYTIME         SDU1XRLP_SCHRETRYTIME,
                  INACTIVETIMERLEN     SDU1XRLP_INACTIVETIMERLEN,
                  REXMITFRAMETHRESHOLD SDU1XRLP_REXMITFRAMETHRESHOLD,
                  SCHSTOPTHRESHOLD     SDU1XRLP_SCHSTOPTHRESHOLD,
                  SCHSTOPCHECKCOUNT    SDU1XRLP_SCHSTOPCHECKCOUNT
        
          FROM NE_BSC_C BC,
         (SELECT DISTINCT OMCID,
                          ACMACRODIVSW,
                          SCHRELDTXDUR,
                          SPT16XREVSCHSW,
                          FWDSCH32XSW,
                          REVSCH32XSW,
                          FWDSCHSHOSW,
                          REVSCHSHOSW,
                          FWDSASTHR,
                          FWDSASMAXNUM,
                          REVSASTHR,
                          REVSASMAXNUM,
                          FWDSCHVARRATESW,
                          REVSCHVARRATESW,
                          REVSCHEXTSW,
                          REVSCHEXTFOREDURSW,
                          FWDSCHEXTSW
            FROM CLT_CM_BSC_CHM_HW
           WHERE STAMPTIME =TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) BCH,
         (SELECT DISTINCT OMCID, PNINC
            FROM CLT_CM_BSC_HW
           WHERE STAMPTIME =TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) CBH,
         (SELECT DISTINCT OMCID,
                          HHOMAXTARGNUM,
                          INTRABSCHHOSW,
                          INTERBSCHHOSW
            FROM CLT_CM_BSC_BSCHO_HW
           WHERE STAMPTIME =TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) BBH,
         (SELECT DISTINCT OMCID, INTERBSCHHOSW
            FROM CLT_CM_HW_ODTMOC_NBRBSCFUNC
           WHERE STAMPTIME =TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) HON,
         (SELECT DISTINCT OMCID, TRGARFCN, STRTIME, STOPTIME
            FROM CLT_CM_BSC_BSCRSM_HW
           WHERE STAMPTIME =TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) CBBH,
         (SELECT OMCID,
                 RTT,
                 NAKROUNDSFWD,
                 NAKROUNDSREV,
                 NAKPERROUNDFWD0,
                 NAKPERROUNDFWD1,
                 NAKPERROUNDFWD2,
                 NAKPERROUNDREV0,
                 NAKPERROUNDREV1,
                 NAKPERROUNDREV2
            FROM CLT_CM_BSC_RLPBLOB_HW
           WHERE STAMPTIME =TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) BRB,
         (SELECT OMCID,
                 QOSFUNSW,
                 GOLDFSCHRATE,
                 GOLDRSCHRATE,
                 SILVERFSCHRATE,
                 SILVERRSCHRATE,
                 BRONZEFSCHRATE,
                 BRONZERSCHRATE,
                 DATASW
            FROM CLT_CM_QOS_HW
           WHERE STAMPTIME =TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) CQH,
         (SELECT OMCID,
                 SMOOTHPERIOD,
                 SCHLOCKTHRESHOLD,
                 SCHRETRYTIME,
                 INACTIVETIMERLEN,
                 REXMITFRAMETHRESHOLD,
                 SCHSTOPTHRESHOLD,
                 SCHSTOPCHECKCOUNT
            FROM CLT_CM_SDU1XRLP_HW
           WHERE STAMPTIME =TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')) CSH,
         CFG_CITY_SID CS
         WHERE BC.CITY_ID || BC.BSC_ID = BCH.OMCID(+)
           AND BC.CITY_ID || BC.BSC_ID = CBH.OMCID(+)
           AND BC.CITY_ID || BC.BSC_ID = BBH.OMCID(+)
           AND BC.CITY_ID || BC.BSC_ID = HON.OMCID(+)
           AND BC.CITY_ID || BC.BSC_ID = CBBH.OMCID(+)
           AND BC.CITY_ID || BC.BSC_ID = BRB.OMCID(+)
           AND BC.CITY_ID || BC.BSC_ID = CQH.OMCID(+)
           AND BC.CITY_ID || BC.BSC_ID = CSH.OMCID(+)
           AND BC.VENDOR = 'ZY0808'
           AND BC.CITY_ID = CS.CITYID(+)
					</sql>
			</mapping>
			<!--中兴BSC 1X 省接口-->
    <mapping name="${province_en}_PARA_BSC_ZTE_1X_%%Y%%M%%D.csv" templet="中兴BSC_1X省接口_三期.ftl" before="1">
				<sql>
					SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr, BC.NE_SYS_ID,
                CS.PROVINCENAME,
                CS.CITYNAME,
                BC.RELATED_MSC,
                NULL MGM,

                PWR_CNTL_STEP1,
                PWR_CNTL_STEP2,
                PWR_CNTL_STEP3,
                FPC_SUBCHAN_GAIN1,
                FPC_SUBCHAN_GAIN2,
                FPC_SUBCHAN_GAIN3
  FROM NE_BSC_C BC, CLT_CM_ZTE_R_3G_S_FWDPOWER_1X SFX, CFG_CITY_SID CS
 WHERE BC.CITY_ID || BC.BSC_ID = SFX.OMCID(+)
   AND BC.VENDOR = 'ZY0804'
   AND SFX.STAMPTIME(+) = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')
   AND BC.CITY_ID = CS.CITYID(+)
					</sql>
			</mapping>
			<!--中兴BSC DO 省接口-->
    <mapping name="${province_en}_PARA_BSC_ZTE_DO_%%Y%%M%%D.csv" templet="中兴BSC_DO省接口_三期.ftl">
				<sql>SELECT DISTINCT '%%Y-%%M-%%D'   start_time_curr, BC.NE_SYS_ID,
                CS.PROVINCENAME,
                CS.CITYNAME,
                BC.RELATED_MSC,
                NULL MGM,

                PROBESEQUENCEMAX,
                DRCLOCKPERIOD,
                DRCLOCKLENGTH,
                MUPACKETSENABLED,
                DSCLENGTH,
                SPENABLEDTHRESH,
                DRCSUPERVISIONTIMER,
                DSCCHANNELGAINBOOST,
                DRCCHANNELGAINBOOST,
                PROBEBACKOFF,
                PROBESEQBACKOFF,
                ACCDATAOFFSETNOM,
                ACCDATAOFFSET9K6,
                APERSISTENCEOR,
                ATACCESSRATEMAX,
                SOFTHODELAY
  FROM NE_BSC_C BC, CLT_CM_ZTE_R_H_S_CFG_PARA SFX, CFG_CITY_SID CS
 WHERE BC.CITY_ID || BC.BSC_ID = SFX.OMCID(+)
   AND BC.VENDOR = 'ZY0804'
   AND SFX.STAMPTIME(+) = TO_DATE('%%Y-%%M-%%D %%H:%%m:%%S', 'YYYY-MM-DD HH24:MI:SS')
   AND BC.CITY_ID = CS.CITYID(+)
					</sql>
			</mapping>			
		</resolve>
	</to>
	
	<!-- 传输接口, 当只有path属性在时候为本地接口，其他则为远程接口 -->
		
    
        <ti id="1" after="1">
		<property name="ftpip">132.228.39.154</property>
		<property name="port">21</property>
		<property name="username">FTPUser</property>
		<property name="password">Js!QAZ7</property>
		<property name="path">/PARA/</property><!--可以配置通配符HUB/WORK/-->
		<property name="encode">utf-8</property>
	</ti>
	<t>
		<action id="1" toid="1" tiid="1" strategyid="1"/><!---->
	</t>
	
	<!-- 默认失败不处理  0:正常   1:   2: -->
	<strategy id="1">
		<property name="failure">1,2,3</property>
	</strategy>
	
	<!-- before ,after ,exception -->
	<trigger id="11" class="cn.uway.nbi.task.triggerc.UpdateBean" />
</config>