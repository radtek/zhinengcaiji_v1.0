<?xml version="1.0" encoding="utf-8" ?>
<config>
	<include>
		<property name="mapping">mapping.xml</property>
		<property name="loop">true</property>
	</include>
	<!-- 100: db 200:file(200:local file , 201: ftp file) 300:socket 400:others -->
	<ds id="1" type="100">
		<property name="url">jdbc:oracle:thin:@192.168.15.12:1521:uway
		</property>
		<property name="driver">oracle.jdbc.driver.OracleDriver</property>
		<property name="username">CNOAP</property>
		<property name="password">uwaysoft2009</property>
	</ds>
	<!-- to 与 resolve 是一对多关系, package为可选标签 -->

	<to id="1">
		<resolve dsid="1">
			<mapping name="GD_PERF_CITY_${city_id}_%%Y%%M%%D%%H.txt" templet="ATM无线网络优化-PERF-CITY.ftl" >
				<sql>
				select  to_char(start_time,'yyyy-mm-dd hh24')   as   start_time  ,
					    city_id  as   city_id  ,
					    vendorname,
					    SUM(P_TCH_ASSIGN_SUC)  as   P_TCH_ASSIGN_SUC  ,
					    SUM(BSS_HHO_ATT)  as   BSS_HHO_ATT  ,
					    SUM(O_TCH_ASSIGN_SUC)  as   O_TCH_ASSIGN_SUC  ,
					    SUM(CALL_ATT)  as   CALL_ATT  ,
					    SUM(TCH_DROP_NUM)  as   TCH_DROP_NUM  ,
					    CASE WHEN SUM(TCH_DROP_NUM)=0 THEN 0 ELSE ROUND(SUM(TRAFFIC_CS)*60/SUM(TCH_DROP_NUM),2) END  as   TRAFFIC_DROP_RATE  ,
					    CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END  as   TCH_DROP_RATE  ,
					    CASE WHEN SUM(S_SHO_ATT) = 0 THEN 0 ELSE ROUND(SUM(S_SHO_SUC)/SUM(S_SHO_ATT) * 100,2) END  as   S_SHO_SUC_RATE  ,
					    CASE WHEN SUM(BSS_HHO_ATT) = 0 THEN 100 ELSE   ROUND(SUM(BSS_HHO_SUC)/SUM(BSS_HHO_ATT),4) * 100 END  as   BSS_HHO_SUC_RATE  ,
					    CASE WHEN SUM(LOC_UPDATE_ATT_NUM) = 0 THEN 0 ELSE   ROUND(SUM(LOC_UPDATE_SUC_NUM)/SUM(LOC_UPDATE_ATT_NUM),4) * 100 END  as   LOC_UPDATE_SUC_RATE  ,
					    CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END  as   TCH_CALL_SUC_RATE  ,
					    CASE WHEN SUM(TCH_SETUP_ATT) = 0 THEN 0 ELSE  ROUND(SUM(TCH_SETUP_SUC)/SUM(TCH_SETUP_ATT),4) * 100 END  as   TCH_ASSIGN_SUC_RATE  ,
					    CASE WHEN SUM(P_TCH_ASSIGN_ATT) = 0 THEN 0   ELSE ROUND(SUM(P_TCH_ASSIGN_SUC)/SUM(P_TCH_ASSIGN_ATT),4) * 100 END  as   T_TCH_ASSIGN_SUC_RATE  ,
					    CASE WHEN SUM(O_TCH_ASSIGN_ATT) = 0 THEN 0 ELSE  ROUND(SUM(O_TCH_ASSIGN_SUC)/SUM(O_TCH_ASSIGN_ATT),4)*100 END  as   O_TCH_ASSIGN_SUC_RATE  ,
					    CASE WHEN  SUM(TCH_SETUP_ATT) = 0 THEN 0   ELSE ROUND(SUM(TCH_BLOCK_COUNT)/SUM(TCH_SETUP_ATT),4)*100 END  as   TCH_BLOCK_RATE  ,
					    SUM(O_TCH_ASSIGN_ATT)  as   O_TCH_ASSIGN_ATT  ,
					    SUM(WALSHCODE_ERL)  as   WALSHCODE_ERL  ,
					    SUM(TRAFFIC_CS)  as   TRAFFIC_CS  ,
					    SUM(SHO_TRAFFIC_CS)  as   SHO_TRAFFIC_CS  ,
					    SUM(TCH_BLOCK_COUNT)  as   TCH_BLOCK_COUNT  ,
					    SUM(TCH_SETUP_SUC)  as   TCH_SETUP_SUC  ,
					    SUM(TCH_SETUP_ATT)  as   TCH_SETUP_ATT  ,
					    SUM(TCH_ASSIGN_SUC)  as   TCH_ASSIGN_SUC  ,
					    SUM(TCH_ASSIGN_ATT)  as   TCH_ASSIGN_ATT  ,
					    SUM(LOC_UPDATE_SUC_NUM)  as   LOC_UPDATE_SUC_NUM  ,
					    SUM(LOC_UPDATE_ATT_NUM)  as   LOC_UPDATE_ATT_NUM  ,
					    SUM(S_SHO_SUC)  as   S_SHO_SUC  ,
					    SUM(S_SHO_ATT)  as   S_SHO_ATT  ,
					    SUM(BSS_HHO_SUC)  as   BSS_HHO_SUC  ,
					    SUM(P_TCH_ASSIGN_ATT)  as   P_TCH_ASSIGN_ATT  ,
					    CASE WHEN SUM(TRAFFIC_CS) = 0 THEN 0 ELSE      ROUND(SUM(SHO_TRAFFIC_CS - TRAFFIC_CS)/SUM(TRAFFIC_CS),4) * 100     END   as   S_SWITCH_GENE  ,
					    SUM(TRAFFIC_DO_COMMON)  as   TRAFFIC_DO_COMMON  ,
					    CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END  as   DO_SUC_CONN_RATE  ,
					    ROUND(SUM(DATA_THROUGHPUT_FWD_1X)/1000/1024,3)  as   THROUGHPUT_FWD_1X  ,
					    ROUND(SUM(DATA_THROUGHPUT_REV_1X)/1000/1024,3)  as   THROUGHPUT_REV_1X  ,
					    ROUND(AVG(DO_TCH_AVG_SLOT_OCCUPY_RATE),2)  as   DO_TCH_AVG_SLOT_OCCUPY_RATE  ,
					    ROUND(SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)/1024/1024/1024,3)  as   DO_FTCH_RLP_TX  ,
					    ROUND(SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)/1024/1024/1024,3)  as   DO_RTCH_RLP_TX  ,
					    ROUND(SUM(AUTH_ATT_DO),3)  as   AUTH_ATT_DO  ,
					    ROUND(SUM(AUTH_SUC_DO),3)  as   AUTH_SUC_DO  ,
					    CASE WHEN SUM(AUTH_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AUTH_SUC_DO) / SUM(AUTH_ATT_DO) * 100, 3) END  as   AUTH_SUC_RATE_DO  ,
					    SUM(GSHO_SUC_NUM)  as   GSHO_SUC_NUM  ,
					    SUM(GSHO_ATT_NUM)  as   GSHO_ATT_NUM  ,
					    CASE WHEN SUM(GSHO_ATT_NUM)=0 THEN 100 ELSE ROUND(SUM(GSHO_SUC_NUM)/SUM(GSHO_ATT_NUM),4)*100 END  as   GSHO_SUC__RATE  ,
					    SUM(nvl(DROPCALLNUM_RFLOSE_DO,0))  as   DROPCALLNUM_RFLOSE_DO  ,
					    SUM(nvl(DROPCALLNUM_HARDHOFAIL_DO,0))  as   DROPCALLNUM_HARDHOFAIL_DO  ,
					    SUM(nvl(DROPCALLNUM_OTHER_DO,0))  as   DROPCALLNUM_OTHER_DO  ,
					    SUM(nvl(RELEASETIMES_INCLPDSN_DO,0))  as   RELEASETIMES_INCLPDSN_DO  ,
					    SUM(TRAFFIC_CS)+SUM(TRAFFIC_PS)  as   TCH_TRAFFIC_ALL  ,
					    SUM(CALL_ATT_ALL)  as   CALL_ATT_ALL  ,
					    SUM(CALL_SETUP_ALL)  as   CALL_SETUP_ALL  ,
					    SUM(TCH_DROP_NUM_ALL)  as   TCH_DROP_NUM_ALL  ,
					    SUM(TCH_ASSIGN_SUC_UN_ALL)  as   TCH_ASSIGN_SUC_UN_ALL  ,
					    CASE WHEN SUM(CALL_ATT_ALL) = 0 THEN 100 ELSE ROUND(SUM(CALL_SETUP_ALL)/SUM(CALL_ATT_ALL),4) * 100 END  as   CALL_SETUP_SUC_ALL_RATE  ,
					    CASE WHEN SUM(TCH_ASSIGN_SUC_UN_ALL) = 0 THEN 0 ELSE ROUND(SUM(TCH_DROP_NUM_ALL)/SUM(TCH_ASSIGN_SUC_UN_ALL),5)* 100 END  as   TCH_DROP_ALL_RATE  ,
					    SUM(CELL_COUNT)  as   CELL_COUNT  ,
					    SUM(DO_CONN_ATT)  as   DO_CONN_ATT  ,
					    SUM(DO_SUC_CONN_NUM)  as   DO_SUC_CONN_NUM  ,
					    SUM(AT_CONN_ATT_DO)  as   AT_CONN_ATT_DO_2_4  ,
					    SUM(AN_CONN_ATT_DO)  as   AN_CONN_ATT_DO_2_5  ,
					    SUM(AT_CONN_SUC_DO)  as   AT_CONN_SUC_DO_2_6  ,
					    SUM(AN_CONN_SUC_DO)  as   AN_CONN_SUC_DO_2_7  ,
					    SUM(DO_SUC_CONN)  as   DO_SUC_CONN_DO  ,
					    SUM(DO_DROP_NUM)  as   DO_DROP_NUM  ,
					    CASE WHEN SUM(DO_SUC_CONN) = 0 THEN 0 ELSE ROUND(SUM(DO_DROP_NUM)/SUM(DO_SUC_CONN),4)*100 END  as   DO_DROP_RATE_2_22  ,
					    CASE WHEN SUM(UATI_ATT_NUM) = 0 THEN 0 ELSE ROUND(SUM(UATI_SUC_NUM)/SUM(UATI_ATT_NUM),4)*100 END  as   UATI_ASSIGN_SUC_RATE_3_1  ,
					    SUM(UATI_ATT_NUM)  as   UATI_ATT_NUM_3_2  ,
					    SUM(UATI_SUC_NUM)  as   UATI_SUC_NUM_3_3  ,
					    SUM(UATI_ATT_FAILED_NUM_DO)  as   UATI_ATT_FAILED_NUM_DO_3_4  ,
					    SUM(UATI_AVG_SETUP_DURATION_DO)  as   UATI_AVG_SETUP_DURATION_DO  ,
					    CASE WHEN SUM(AUTH_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AUTH_SUC_DO)/SUM(AUTH_ATT_DO),4)*100 END  as   AUTH_SUC_RATE_DO_3_6  ,
					    SUM(AUTH_SUC_DO)  as   AUTH_SUC_DO_3_7  ,
					    SUM(AUTH_ATT_DO)  as   AUTH_ATT_DO_3_8  ,
					    SUM(AUTH_DENY_NUM_DO)  as   AUTH_DENY_NUM_DO_3_9  ,
					    SUM(AUTH_FAILED_NUM_DO)  as   AUTH_FAILED_NUM_DO_3_10  ,
					    CASE WHEN SUM(SESS_NEGO_SUC_NUM_DO+SESS_NEGO_FAILED_NUM_DO) = 0 THEN 0 ELSE ROUND(SUM(SESS_NEGO_SUC_NUM_DO)/SUM(SESS_NEGO_SUC_NUM_DO+SESS_NEGO_FAILED_NUM_DO),4)*100 END  as   SESS_NEGO_SUC_RATE_DO  ,
					    SUM(SESS_NEGO_SUC_NUM_DO)  as   SESS_NEGO_SUC_NUM_DO_3_12  ,
					    SUM(SESS_NEGO_FAILED_NUM_DO)  as   SESS_NEGO_FAILED_NUM_DO  ,
					    MAX(SESSION_NUM_DO)  as   SESSION_ACTIVE_NUM  ,
					    MAX(SESSION_ACTIVE_NUM_DO)  as   SESSION_ACTIVE_NUM_DO_3_18  ,
					    MAX(SESSION_NON_ACTIVE_NUM_DO)  as   SESSION_NON_ACTIVE_NUM_DO  ,
					    CASE WHEN SUM(AT_DOR2ACT_ATT_DO+AN_DOR2ACT_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AT_DOR2ACT_SUC_DO+AN_DOR2ACT_SUC_DO)/SUM(AT_DOR2ACT_ATT_DO+AN_DOR2ACT_ATT_DO),4)*100 END  as   DOR2ACT_SUC_DO_4_1  ,
					    SUM(AT_DOR2ACT_ATT_DO+AN_DOR2ACT_ATT_DO)  as   DOR2ACT_ATT_4_2  ,
					    SUM(AT_DOR2ACT_SUC_DO+AN_DOR2ACT_SUC_DO)  as   DOR2ACT_SUC_4_3  ,
					    CASE WHEN SUM(AT_DOR2ACT_ATT_DO) = 0 THEN 0 ELSE SUM(AT_DOR2ACT_SUC_DO)/SUM(AT_DOR2ACT_ATT_DO)*100 END  as   AT_DOR2ACT_SUC_RATE_4_4  ,
					    SUM(AT_DOR2ACT_ATT_DO)  as   AT_DOR2ACT_ATT_DO_4_5  ,
					    SUM(AT_DOR2ACT_SUC_DO)  as   AT_DOR2ACT_SUC_DO_4_6  ,
					    SUM(AT_DOR2ACT_ATT_DO-AT_DOR2ACT_SUC_DO)  as   AT_DOR2ACT_4_7  ,
					    CASE WHEN SUM(AN_DOR2ACT_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AN_DOR2ACT_SUC_DO)/SUM(AN_DOR2ACT_ATT_DO),4)*100 END  as   AN_DOR2ACT_SUC_RATE_4_7  ,
					    SUM(AN_DOR2ACT_ATT_DO)  as   AN_DOR2ACT_ATT_DO_4_9  ,
					    SUM(AN_DOR2ACT_SUC_DO)  as   AN_DOR2ACT_SUC_DO_4_10  ,
					    SUM(AN_DOR2ACT_ATT_DO-AN_DOR2ACT_SUC_DO)  as   AN_DOR2ACT_ATT_4_11  ,
					    SUM(TRAFFIC_DO_COMMON)  as   TRAFFIC_DO_COMMON_5_2  ,
					    ROUND(SUM(TRAFFIC_CE_DO_COMMON),2)  as   TRAFFIC_CE_DO_COMMON_5_3  ,
					    ROUND(SUM(TRAFFIC_CE_DO_COMMON-TRAFFIC_DO_COMMON),2)  as   TRAFFIC_SO_COMMON_5_4  ,
					    CASE WHEN SUM(TRAFFIC_DO_COMMON) = 0 THEN 0 ELSE ROUND(SUM(TRAFFIC_CE_DO_COMMON-TRAFFIC_DO_COMMON)/SUM(TRAFFIC_DO_COMMON),4)*100 END  as   TRAFFIC_SO_FA_5_5  ,
					    SUM(REV_THROUGHOUT_PCF_DO)  as   FWD_THROUGHOUT_PCF_DO_6_2  ,
					    SUM(FWD_THROUGHOUT_PCF_DO)  as   REV_THROUGHOUT_PCF_DO_6_1  ,
					    ROUND(AVG(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)*8/1000/3600,3)  as   FTCH_RLP_TX_DO_6_5  ,
					    CASE WHEN SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) = 0 THEN 0 ELSE ROUND(SUM(FTCH_RLP_RETX_DO)/SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) * 100,2) END  as   FTCH_RLP_RATE_6_5  ,
					    ROUND(AVG(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)*8/1000/3600,3)  as   RTCH_RLP_TX_DO_6_7  ,
					    CASE WHEN SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)=0 THEN 0 ELSE ROUND(SUM(RTCH_RLP_RETX_DO)/SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO) * 100,4) END  as   RTCH_RLP_RETX_RATE_6_8  ,
					    ROUND(AVG(DO_TCH_AVG_SLOT_OCCUPY_RATE),3)  as   DO_TCH_AVG_SLT_OCC_RT_6_13  ,
					    CASE WHEN SUM(GSHO_ATT_NUM) = 0 THEN 0 ELSE ROUND(SUM(GSHO_SUC_NUM) / SUM(GSHO_ATT_NUM),4) * 100 END  as   GSHO_SUC_RATE_7_1  ,
					    SUM(GSHO_ATT_NUM)  as   GSHO_ATT_NUM_7_2  ,
					    SUM(GSHO_SUC_NUM)  as   GSHO_SUC_NUM_7_3  ,
					    CASE WHEN SUM(PAGE_ATT_NUM_DO) = 0 THEN 0 ELSE ROUND(SUM(PAGE_SUC_NUM_DO)/SUM(PAGE_ATT_NUM_DO),4)*100 END  as   PAGE_SUC_NUM_RATE_8_1  ,
					    SUM(PAGE_ATT_NUM_DO)  as   PAGE_ATT_NUM_DO_8_2  ,
					    SUM(PAGE_SUC_NUM_DO)  as   PAGE_SUC_NUM_DO_8_3  ,
					    ROUND(SUM(DO_RLP_FLOWRATE)/1024/1024/1024,3)  as   DO_RLP_FLOWRATE  ,
					    SUM(WIRELESS_CAPACITY)  as   WIRELESS_CAPACITY  ,
					    CASE WHEN AVG(WIRELESS_CAPACITY) = 0 THEN 0 ELSE ROUND(AVG(TRAFFIC_1X_REV_ALL) / AVG(WIRELESS_CAPACITY) * 100, 3) END  as   TCH_LOAD_RATIO  ,
					    CASE WHEN SUM(AT_CONN_ATT_DO+AN_CONN_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AT_CONN_SUC_DO+AN_CONN_SUC_DO)/SUM(AT_CONN_ATT_DO+AN_CONN_ATT_DO),4)*100 END  as   ATT_SUCESS_RATE_DO_2_1  ,
					    CASE WHEN SUM(AT_CONN_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AT_CONN_SUC_DO)/SUM(AT_CONN_ATT_DO),4)*100 END  as   ATA_SUCESS_RATE_DO_2_2  ,
					    CASE WHEN SUM(AN_CONN_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AN_CONN_SUC_DO)/SUM(AN_CONN_ATT_DO),4)*100 END  as   ANT_SUCESS_RATE_DO_2_3  ,
					    ROUND(SUM(EQU_USER_NUM_DO),3)  as   EQU_USER_NUM_DO  ,
					    ROUND(SUM(TRAFFIC_1X_REV_ALL),3)  as   TRAFFIC_1X_REV_ALL  ,
					    SUM(DRC_FWD_LESS_3072_DO)  as   DRC_FWD_LESS_3072_DO  ,
					    SUM(DRC_FWD_3072_1228_DO)  as   DRC_FWD_3072_1228_DO  ,
					    SUM(DRC_FWD_MORE_1228_DO)  as   DRC_FWD_MORE_1228_DO  ,
					    CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_LESS_3072_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as   DRC_FWD_LESS_3072_RATE  ,
					    CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_3072_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as   DRC_FWD_3072_1228_RATE  ,
					    CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_MORE_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as   DRC_FWD_MORE_1228_RATE  ,
					    CASE WHEN SUM(INN_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_BS_SHO_SUC_DO)/SUM(INN_BS_SHO_ATT_DO),3) END  as   INN_BS_SHO_SUC_RATE  ,
					    SUM(INN_BS_SHO_ATT_DO)  as   INN_BS_SHO_ATT_DO  ,
					    SUM(INN_BS_SHO_SUC_DO)  as   INN_BS_SHO_SUC_DO  ,
					    CASE WHEN SUM(INTER_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_BS_SHO_SUC_DO)/SUM(INTER_BS_SHO_ATT_DO),3) END  as   INTER_BS_SHO_SUC_RATE  ,
					    SUM(INTER_BS_SHO_ATT_DO)  as   INTER_BS_SHO_ATT_DO  ,
					    SUM(INTER_BS_SHO_SUC_DO)  as   INTER_BS_SHO_SUC_DO  ,
					    CASE WHEN SUM(INN_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_AN_HHO_SUC_DO)/SUM(INN_AN_HHO_ATT_DO),3) END  as   INN_AN_HHO_SUC_RATE  ,
					    SUM(INN_AN_HHO_ATT_DO)  as   INN_AN_HHO_ATT_DO  ,
					    SUM(INN_AN_HHO_SUC_DO)  as   INN_AN_HHO_SUC_DO  ,
					    CASE WHEN SUM(INTER_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_AN_HHO_SUC_DO)/SUM(INTER_AN_HHO_ATT_DO),3) END  as   INTER_AN_HHO_SUC_RATE  ,
					    SUM(INTER_AN_HHO_ATT_DO)  as   INTER_AN_HHO_ATT_DO  ,
					    SUM(INTER_AN_HHO_SUC_DO)  as   INTER_AN_HHO_SUC_DO  ,
					    (100-((CASE WHEN SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0)) = 0 THEN 0 ELSE  ROUND(SUM(NVL(TCH_DROP_NUM_CARRIER,0))/SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0))* 100,3) END*1.3)+(100-(CASE WHEN SUM(NVL(CALL_ATT_CARRIER,0)) = 0 THEN 100 ELSE ROUND(SUM(NVL(TCH_ASSIGN_SUC_CARRIER,0))/SUM(NVL(CALL_ATT_CARRIER,0)),4) * 100 END))))  as   CALL_AVG_RATE  ,
					    CASE WHEN SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0)) = 0 THEN 0 ELSE  ROUND(SUM(NVL(TCH_DROP_NUM_CARRIER,0))/SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0))* 100,3) END  as   CALL_AVG_RATE1  ,
					    CASE WHEN SUM(NVL(CALL_ATT_CARRIER,0)) = 0 THEN 100 ELSE   ROUND(SUM(NVL(TCH_ASSIGN_SUC_CARRIER,0))/SUM(NVL(CALL_ATT_CARRIER,0)),4) * 100 END  as   CALL_AVG_RATE2  ,
					    (100-((100-(CASE WHEN SUM(NVL(CONN_ATT_DO_CARRIER,0))=0 THEN 0 ELSE ROUND(SUM(NVL(CONN_SUC_DO_CARRIER,0)) / SUM(NVL(CONN_ATT_DO_CARRIER,0)) * 100, 2) END))*1.3+(CASE WHEN SUM(NVL(CONN_SUCC_DO_CARRIER,0))=0 THEN 0 ELSE ROUND(SUM(NVL(CALL_DROP_DO_CARRIER,0)) / SUM(NVL(CONN_SUCC_DO_CARRIER,0)) * 100, 3) END)))  as   THREEG_AVG_RATE  ,
					    CASE WHEN SUM(NVL(CONN_ATT_DO_CARRIER,0))=0 THEN 0 ELSE ROUND(SUM(NVL(CONN_SUC_DO_CARRIER,0)) / SUM(NVL(CONN_ATT_DO_CARRIER,0)) * 100, 2) END  as   THREEG_AVG_RATE1  ,
					    CASE WHEN SUM(NVL(CONN_SUCC_DO_CARRIER, 0)) = 0 THEN  0 ELSE ROUND(SUM(NVL(CALL_DROP_DO_CARRIER, 0)) / SUM(NVL(CONN_SUCC_DO_CARRIER, 0)) * 100, 3) END  as   THREEG_AVG_RATE2  ,
					    SUM(NVL(TCH_DROP_NUM_CARRIER,0))  as   TCH_DROP_NUM_CARRIER  ,
					    SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0))  as   OP_SUC_NUM_CARRIER  ,
					    SUM(NVL(TCH_ASSIGN_SUC_CARRIER,0))  as   TCH_ASSIGN_SUC_CARRIER  ,
					    SUM(NVL(CALL_ATT_CARRIER,0))  as   CALL_ATT_CARRIER  ,
					    SUM(NVL(CONN_SUC_DO_CARRIER,0))  as   CONN_SUC_DO_CARRIER  ,
					    SUM(NVL(CONN_ATT_DO_CARRIER,0))  as   CONN_ATT_DO_CARRIER  ,
					    SUM(NVL(CALL_DROP_DO_CARRIER, 0))  as   CALL_DROP_DO_CARRIER  ,
					    SUM(NVL(CONN_SUCC_DO_CARRIER, 0))  as   CONN_SUCC_DO_CARRIER  ,
					    SUM(DO_CONN_ATT)-SUM(DO_SUC_CONN_NUM)  as   DO_FAIL_CONN_NUM  ,
					    CASE WHEN SUM(DO_FWD_SLOT)=0 THEN 0 ELSE ROUND(SUM(DO_FWD_BYTE)*8/1000/(SUM(DO_FWD_SLOT)*0.001667),2) END  as   FWD_RLP_AVG_RATE  ,
					    ROUND(AVG(SESSION_AVG_NUM),2)  as   SESSION_AVG_NUM  ,
					    ROUND(AVG(ACTIVE_SESSION_NUM),2)  as   ACTIVE_SESSION_NUM  ,
					    ROUND(AVG(NON_ACTIVE_SESSION_NUM),2)  as   NON_ACTIVE_SESSION_NUM  ,
					    SUM(INTER_BSC_HHO_ADD_ATT_VOICE)  as   INTER_BSC_HHO_ADD_ATT_VOICE  ,
					    SUM(INTER_BSC_HHO_ADD_SUC_VOICE)  as   INTER_BSC_HHO_ADD_SUC_VOICE  ,
					    CASE WHEN SUM(INTER_BSC_HHO_ADD_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_ADD_SUC_VOICE)/SUM(INTER_BSC_HHO_ADD_ATT_VOICE)*100,2) END  as   INTER_BSC_HHO_ADD_SUC_RAT  ,
					    SUM(INTER_BSC_HHO_OFF_ATT_VOICE)  as   INTER_BSC_HHO_OFF_ATT_VOICE  ,
					    SUM(INTER_BSC_HHO_OFF_SUC_VOICE)  as   INTER_BSC_HHO_OFF_SUC_VOICE  ,
					    CASE WHEN SUM(INTER_BSC_HHO_OFF_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_OFF_SUC_VOICE)/SUM(INTER_BSC_HHO_OFF_ATT_VOICE)*100,2) END  as   INTER_BSC_HHO_OFF_SUC_RAT  ,
					    CASE WHEN SUM(RCE_RLB_NUM_DO)=0 THEN 0 ELSE ROUND(100*SUM(RCE_MAX_BUSY_NUM_DO)/SUM(RCE_RLB_NUM_DO),2) END  as   RCE_MAX_BUSY_RATIO_DO  ,
					    MAX(RCE_MAX_BUSY_NUM_DO)  as   RCE_MAX_BUSY_NUM_DO  ,
					    ROUND(AVG(RCE_RLB_NUM_DO),0)  as   RCE_RLB_NUM_DO  ,
					    CASE WHEN SUM(ABIS_FWD_CFG_BW_DO)=0 THEN 0 ELSE ROUND(100*SUM(ABIS_FWD_AVG_BW_DO)/SUM(ABIS_FWD_CFG_BW_DO)/1000,2) END  as   ABIS_FWD_AVG_BW_RATIO_DO  ,
					    ROUND(AVG(ABIS_FWD_AVG_BW_DO),2)  as   ABIS_FWD_AVG_BW_DO  ,
					    ROUND(AVG(ABIS_FWD_CFG_BW_DO),2)  as   ABIS_FWD_CFG_BW_DO  ,
					    CASE WHEN SUM(CONN_ATT_NUM_A8_A10)=0 THEN 0 ELSE ROUND(100*SUM(CONN_SUC_NUM_A8_A10)/SUM(CONN_ATT_NUM_A8_A10),2) END  as   CONN_SUC_RATIO_A8_A10  ,
					    SUM(CONN_SUC_NUM_A8_A10)  as   CONN_SUC_NUM_A8_A10  ,
					    SUM(CONN_ATT_NUM_A8_A10)  as   CONN_ATT_NUM_A8_A10  ,
					    ROUND(AVG(FWD_PHY_CCH_SLOT_RATE_DO),3)  as   FWD_PHY_CCH_SLOT_RATE_DO  ,
					    ROUND(AVG(AVG_ACH_USAGE_DO),3)  as   AVG_ACH_USAGE_DO  ,
					    ROUND(AVG(REV_LINK_BUSY_RATIO_DO),3)  as   REV_LINK_BUSY_RATIO_DO  ,
					    CASE WHEN vendor='ZY0808' THEN ROUND(AVG(PCH_AVG_USAGE),2) 
					    WHEN VENDOR = 'ZY0804' THEN CASE WHEN SUM(PCH_CANTRANSMIT_1X)=0 THEN 0 ELSE ROUND(SUM(PCH_ACTUALTRANSMIT_1X)/SUM(PCH_CANTRANSMIT_1X)*100,2) END  
					  ELSE ROUND(AVG(PCOP),4)*100 END as   PCH_AVG_USAGE   from perf_bsc_c
					where start_time =  to_date('%%Y-%%M-%%D %%H','yyyy-mm-dd hh24')
					      and city_id = ${city_id}
					group by to_char(start_time,'yyyy-mm-dd hh24')  ,  city_id,vendorname,vendor
					order by vendorname,city_id 
				</sql>
			</mapping>
			<mapping name="GD_PERF_BSC_${city_id}_%%Y%%M%%D%%H.txt" templet="ATM无线网络优化-PERF-BSC.ftl" >
				<sql>
				select to_char(start_time,'yyyy-mm-dd hh24')   as   start_time  ,
				      CITY_ID  ,
				      vendorname,
				      BSC  ,
				      china_name as bscname,
				  SUM(P_TCH_ASSIGN_SUC)  as  P_TCH_ASSIGN_SUC  ,
				  SUM(BSS_HHO_ATT)  as  BSS_HHO_ATT  ,
				  SUM(O_TCH_ASSIGN_SUC)  as  O_TCH_ASSIGN_SUC  ,
				  SUM(CALL_ATT)  as  CALL_ATT  ,
				  SUM(TCH_DROP_NUM)  as  TCH_DROP_NUM  ,
				  CASE WHEN SUM(TCH_DROP_NUM)=0 THEN 0 ELSE ROUND(SUM(TRAFFIC_CS)*60/SUM(TCH_DROP_NUM),2) END  as  TRAFFIC_DROP_RATE  ,
				  CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END  as  TCH_DROP_RATE  ,
				  CASE WHEN SUM(S_SHO_ATT) = 0 THEN 0 ELSE ROUND(SUM(S_SHO_SUC)/SUM(S_SHO_ATT) * 100,2) END  as  S_SHO_SUC_RATE  ,
				  CASE WHEN SUM(BSS_HHO_ATT) = 0 THEN 100 ELSE   ROUND(SUM(BSS_HHO_SUC)/SUM(BSS_HHO_ATT),4) * 100 END  as  BSS_HHO_SUC_RATE  ,
				  CASE WHEN SUM(LOC_UPDATE_ATT_NUM) = 0 THEN 0 ELSE   ROUND(SUM(LOC_UPDATE_SUC_NUM)/SUM(LOC_UPDATE_ATT_NUM),4) * 100 END  as  LOC_UPDATE_SUC_RATE  ,
				  CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END  as  TCH_CALL_SUC_RATE  ,
				  CASE WHEN SUM(TCH_SETUP_ATT) = 0 THEN 0 ELSE  ROUND(SUM(TCH_SETUP_SUC)/SUM(TCH_SETUP_ATT),4) * 100 END  as  TCH_ASSIGN_SUC_RATE  ,
				  CASE WHEN SUM(P_TCH_ASSIGN_ATT) = 0 THEN 0   ELSE ROUND(SUM(P_TCH_ASSIGN_SUC)/SUM(P_TCH_ASSIGN_ATT),4) * 100 END  as  T_TCH_ASSIGN_SUC_RATE  ,
				  CASE WHEN SUM(O_TCH_ASSIGN_ATT) = 0 THEN 0 ELSE  ROUND(SUM(O_TCH_ASSIGN_SUC)/SUM(O_TCH_ASSIGN_ATT),4)*100 END  as  O_TCH_ASSIGN_SUC_RATE  ,
				  CASE WHEN  SUM(TCH_SETUP_ATT) = 0 THEN 0   ELSE ROUND(SUM(TCH_BLOCK_COUNT)/SUM(TCH_SETUP_ATT),4)*100 END  as  TCH_BLOCK_RATE  ,
				  SUM(O_TCH_ASSIGN_ATT)  as  O_TCH_ASSIGN_ATT  ,
				  SUM(WALSHCODE_ERL)  as  WALSHCODE_ERL  ,
				  SUM(TRAFFIC_CS)  as  TRAFFIC_CS  ,
				  SUM(SHO_TRAFFIC_CS)  as  SHO_TRAFFIC_CS  ,
				  SUM(TCH_BLOCK_COUNT)  as  TCH_BLOCK_COUNT  ,
				  SUM(TCH_SETUP_SUC)  as  TCH_SETUP_SUC  ,
				  SUM(TCH_SETUP_ATT)  as  TCH_SETUP_ATT  ,
				  SUM(TCH_ASSIGN_SUC)  as  TCH_ASSIGN_SUC  ,
				  SUM(TCH_ASSIGN_ATT)  as  TCH_ASSIGN_ATT  ,
				  SUM(LOC_UPDATE_SUC_NUM)  as  LOC_UPDATE_SUC_NUM  ,
				  SUM(LOC_UPDATE_ATT_NUM)  as  LOC_UPDATE_ATT_NUM  ,
				  SUM(S_SHO_SUC)  as  S_SHO_SUC  ,
				  SUM(S_SHO_ATT)  as  S_SHO_ATT  ,
				  SUM(BSS_HHO_SUC)  as  BSS_HHO_SUC  ,
				  SUM(P_TCH_ASSIGN_ATT)  as  P_TCH_ASSIGN_ATT  ,
				  CASE WHEN SUM(TRAFFIC_CS) = 0 THEN 0 ELSE      ROUND(SUM(SHO_TRAFFIC_CS - TRAFFIC_CS)/SUM(TRAFFIC_CS),4) * 100     END   as  S_SWITCH_GENE  ,
				  SUM(TRAFFIC_DO_COMMON)  as  TRAFFIC_DO_COMMON  ,
				  CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END  as  DO_SUC_CONN_RATE  ,
				  ROUND(SUM(DATA_THROUGHPUT_FWD_1X)/1000/1024,3)  as  THROUGHPUT_FWD_1X  ,
				  ROUND(SUM(DATA_THROUGHPUT_REV_1X)/1000/1024,3)  as  THROUGHPUT_REV_1X  ,
				  ROUND(AVG(DO_TCH_AVG_SLOT_OCCUPY_RATE),2)  as  DO_TCH_AVG_SLOT_OCCUPY_RATE  ,
				  ROUND(SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)/1024/1024/1024,3)  as  DO_FTCH_RLP_TX  ,
				  ROUND(SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)/1024/1024/1024,3)  as  DO_RTCH_RLP_TX  ,
				  ROUND(SUM(AUTH_ATT_DO),3)  as  AUTH_ATT_DO  ,
				  ROUND(SUM(AUTH_SUC_DO),3)  as  AUTH_SUC_DO  ,
				  CASE WHEN SUM(AUTH_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AUTH_SUC_DO) / SUM(AUTH_ATT_DO) * 100, 3) END  as  AUTH_SUC_RATE_DO  ,
				  SUM(GSHO_SUC_NUM)  as  GSHO_SUC_NUM  ,
				  SUM(GSHO_ATT_NUM)  as  GSHO_ATT_NUM  ,
				  CASE WHEN SUM(GSHO_ATT_NUM)=0 THEN 100 ELSE ROUND(SUM(GSHO_SUC_NUM)/SUM(GSHO_ATT_NUM),4)*100 END  as  GSHO_SUC__RATE  ,
				  SUM(nvl(DROPCALLNUM_RFLOSE_DO,0))  as  DROPCALLNUM_RFLOSE_DO  ,
				  SUM(nvl(DROPCALLNUM_HARDHOFAIL_DO,0))  as  DROPCALLNUM_HARDHOFAIL_DO  ,
				  SUM(nvl(DROPCALLNUM_OTHER_DO,0))  as  DROPCALLNUM_OTHER_DO  ,
				  SUM(nvl(RELEASETIMES_INCLPDSN_DO,0))  as  RELEASETIMES_INCLPDSN_DO  ,
				  SUM(TRAFFIC_CS)+SUM(TRAFFIC_PS)  as  TCH_TRAFFIC_ALL  ,
				  SUM(CALL_ATT_ALL)  as  CALL_ATT_ALL  ,
				  SUM(CALL_SETUP_ALL)  as  CALL_SETUP_ALL  ,
				  SUM(TCH_DROP_NUM_ALL)  as  TCH_DROP_NUM_ALL  ,
				  SUM(TCH_ASSIGN_SUC_UN_ALL)  as  TCH_ASSIGN_SUC_UN_ALL  ,
				  CASE WHEN SUM(CALL_ATT_ALL) = 0 THEN 100 ELSE ROUND(SUM(CALL_SETUP_ALL)/SUM(CALL_ATT_ALL),4) * 100 END  as  CALL_SETUP_SUC_ALL_RATE  ,
				  CASE WHEN SUM(TCH_ASSIGN_SUC_UN_ALL) = 0 THEN 0 ELSE ROUND(SUM(TCH_DROP_NUM_ALL)/SUM(TCH_ASSIGN_SUC_UN_ALL),5)* 100 END  as  TCH_DROP_ALL_RATE  ,
				  SUM(CELL_COUNT)  as  CELL_COUNT  ,
				  SUM(DO_CONN_ATT)  as  DO_CONN_ATT  ,
				  SUM(DO_SUC_CONN_NUM)  as  DO_SUC_CONN_NUM  ,
				  SUM(AT_CONN_ATT_DO)  as  AT_CONN_ATT_DO_2_4  ,
				  SUM(AN_CONN_ATT_DO)  as  AN_CONN_ATT_DO_2_5  ,
				  SUM(AT_CONN_SUC_DO)  as  AT_CONN_SUC_DO_2_6  ,
				  SUM(AN_CONN_SUC_DO)  as  AN_CONN_SUC_DO_2_7  ,
				  SUM(DO_SUC_CONN)  as  DO_SUC_CONN_DO  ,
				  SUM(DO_DROP_NUM)  as  DO_DROP_NUM  ,
				  CASE WHEN SUM(DO_SUC_CONN) = 0 THEN 0 ELSE ROUND(SUM(DO_DROP_NUM)/SUM(DO_SUC_CONN),4)*100 END  as  DO_DROP_RATE  ,
				  CASE WHEN SUM(UATI_ATT_NUM) = 0 THEN 0 ELSE ROUND(SUM(UATI_SUC_NUM)/SUM(UATI_ATT_NUM),4)*100 END  as  UATI_ASSIGN_SUC_RATE_3_1  ,
				  SUM(UATI_ATT_NUM)  as  UATI_ATT_NUM_3_2  ,
				  SUM(UATI_SUC_NUM)  as  UATI_SUC_NUM_3_3  ,
				  SUM(UATI_ATT_FAILED_NUM_DO)  as  UATI_ATT_FAILED_NUM_DO_3_4  ,
				  SUM(UATI_AVG_SETUP_DURATION_DO)  as  UATI_AVG_SETUP_DURATION_DO  ,
				  CASE WHEN SUM(AUTH_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AUTH_SUC_DO)/SUM(AUTH_ATT_DO),4)*100 END  as  AUTH_SUC_RATE_DO_3_6  ,
				  SUM(AUTH_SUC_DO)  as  AUTH_SUC_DO_3_7  ,
				  SUM(AUTH_ATT_DO)  as  AUTH_ATT_DO_3_8  ,
				  SUM(AUTH_DENY_NUM_DO)  as  AUTH_DENY_NUM_DO_3_9  ,
				  SUM(AUTH_FAILED_NUM_DO)  as  AUTH_FAILED_NUM_DO_3_10  ,
				  CASE WHEN SUM(SESS_NEGO_SUC_NUM_DO+SESS_NEGO_FAILED_NUM_DO) = 0 THEN 0 ELSE ROUND(SUM(SESS_NEGO_SUC_NUM_DO)/SUM(SESS_NEGO_SUC_NUM_DO+SESS_NEGO_FAILED_NUM_DO),4)*100 END  as  SESS_NEGO_SUC_RATE_DO  ,
				  SUM(SESS_NEGO_SUC_NUM_DO)  as  SESS_NEGO_SUC_NUM_DO_3_12  ,
				  SUM(SESS_NEGO_FAILED_NUM_DO)  as  SESS_NEGO_FAILED_NUM_DO  ,
				  MAX(SESSION_NUM_DO)  as  SESSION_ACTIVE_NUM  ,
				  MAX(SESSION_ACTIVE_NUM_DO)  as  SESSION_ACTIVE_NUM_DO_3_18  ,
				  MAX(SESSION_NON_ACTIVE_NUM_DO)  as  SESSION_NON_ACTIVE_NUM_DO  ,
				  CASE WHEN SUM(AT_DOR2ACT_ATT_DO+AN_DOR2ACT_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AT_DOR2ACT_SUC_DO+AN_DOR2ACT_SUC_DO)/SUM(AT_DOR2ACT_ATT_DO+AN_DOR2ACT_ATT_DO),4)*100 END  as  DOR2ACT_SUC_DO_4_1  ,
				  SUM(AT_DOR2ACT_ATT_DO+AN_DOR2ACT_ATT_DO)  as  DOR2ACT_ATT_4_2  ,
				  SUM(AT_DOR2ACT_SUC_DO+AN_DOR2ACT_SUC_DO)  as  DOR2ACT_SUC_4_3  ,
				  CASE WHEN SUM(AT_DOR2ACT_ATT_DO) = 0 THEN 0 ELSE SUM(AT_DOR2ACT_SUC_DO)/SUM(AT_DOR2ACT_ATT_DO)*100 END  as  AT_DOR2ACT_SUC_RATE_4_4  ,
				  SUM(AT_DOR2ACT_ATT_DO)  as  AT_DOR2ACT_ATT_DO_4_5  ,
				  SUM(AT_DOR2ACT_SUC_DO)  as  AT_DOR2ACT_SUC_DO_4_6  ,
				  SUM(AT_DOR2ACT_ATT_DO-AT_DOR2ACT_SUC_DO)  as  AT_DOR2ACT_4_7  ,
				  CASE WHEN SUM(AN_DOR2ACT_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AN_DOR2ACT_SUC_DO)/SUM(AN_DOR2ACT_ATT_DO),4)*100 END  as  AN_DOR2ACT_SUC_RATE_4_7  ,
				  SUM(AN_DOR2ACT_ATT_DO)  as  AN_DOR2ACT_ATT_DO_4_9  ,
				  SUM(AN_DOR2ACT_SUC_DO)  as  AN_DOR2ACT_SUC_DO_4_10  ,
				  SUM(AN_DOR2ACT_ATT_DO-AN_DOR2ACT_SUC_DO)  as  AN_DOR2ACT_ATT_4_11  ,
				  SUM(TRAFFIC_DO_COMMON)  as  TRAFFIC_DO_COMMON_5_2  ,
				  ROUND(SUM(TRAFFIC_CE_DO_COMMON),2)  as  TRAFFIC_CE_DO_COMMON_5_3  ,
				  ROUND(SUM(TRAFFIC_CE_DO_COMMON-TRAFFIC_DO_COMMON),2)  as  TRAFFIC_SO_COMMON_5_4  ,
				  CASE WHEN SUM(TRAFFIC_DO_COMMON) = 0 THEN 0 ELSE ROUND(SUM(TRAFFIC_CE_DO_COMMON-TRAFFIC_DO_COMMON)/SUM(TRAFFIC_DO_COMMON),4)*100 END  as  TRAFFIC_SO_FA_5_5  ,
				  SUM(REV_THROUGHOUT_PCF_DO)  as  FWD_THROUGHOUT_PCF_DO_6_2  ,
				  SUM(FWD_THROUGHOUT_PCF_DO)  as  REV_THROUGHOUT_PCF_DO_6_1  ,
				  ROUND(AVG(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)*8/1000/3600,3)  as  FTCH_RLP_TX_DO_6_5  ,
				  CASE WHEN SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) = 0 THEN 0 ELSE ROUND(SUM(FTCH_RLP_RETX_DO)/SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) * 100,2) END  as  FTCH_RLP_RATE_6_5  ,
				  ROUND(AVG(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)*8/1000/3600,3)  as  RTCH_RLP_TX_DO_6_7  ,
				  CASE WHEN SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)=0 THEN 0 ELSE ROUND(SUM(RTCH_RLP_RETX_DO)/SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO) * 100,4) END  as  RTCH_RLP_RETX_RATE_6_8  ,
				  ROUND(AVG(DO_TCH_AVG_SLOT_OCCUPY_RATE),3)  as  DO_TCH_AVG_SLOT_OCCUPY_RATE  ,
				  CASE WHEN SUM(GSHO_ATT_NUM) = 0 THEN 0 ELSE ROUND(SUM(GSHO_SUC_NUM) / SUM(GSHO_ATT_NUM),4) * 100 END  as  GSHO_SUC_RATE_7_1  ,
				  SUM(GSHO_ATT_NUM)  as  GSHO_ATT_NUM_7_2  ,
				  SUM(GSHO_SUC_NUM)  as  GSHO_SUC_NUM_7_3  ,
				  CASE WHEN SUM(PAGE_ATT_NUM_DO) = 0 THEN 0 ELSE ROUND(SUM(PAGE_SUC_NUM_DO)/SUM(PAGE_ATT_NUM_DO),4)*100 END  as  PAGE_SUC_NUM_RATE_8_1  ,
				  SUM(PAGE_ATT_NUM_DO)  as  PAGE_ATT_NUM_DO_8_2  ,
				  SUM(PAGE_SUC_NUM_DO)  as  PAGE_SUC_NUM_DO_8_3  ,
				  ROUND(SUM(DO_RLP_FLOWRATE)/1024/1024/1024,3)  as  DO_RLP_FLOWRATE  ,
				  SUM(WIRELESS_CAPACITY)  as  WIRELESS_CAPACITY  ,
				  CASE WHEN AVG(WIRELESS_CAPACITY) = 0 THEN 0 ELSE ROUND(AVG(TRAFFIC_1X_REV_ALL) / AVG(WIRELESS_CAPACITY) * 100, 3) END  as  TCH_LOAD_RATIO  ,
				  CASE WHEN SUM(AT_CONN_ATT_DO+AN_CONN_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AT_CONN_SUC_DO+AN_CONN_SUC_DO)/SUM(AT_CONN_ATT_DO+AN_CONN_ATT_DO),4)*100 END  as  ATT_SUCESS_RATE_DO_2_1  ,
				  CASE WHEN SUM(AT_CONN_ATT_DO) = 0 THEN 0 ELSE ROUND(SUM(AT_CONN_SUC_DO)/SUM(AT_CONN_ATT_DO),4)*100 END  as  ATA_SUCESS_RATE_DO_2_2  ,
				  CASE WHEN SUM(AN_CONN_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AN_CONN_SUC_DO)/SUM(AN_CONN_ATT_DO),4)*100 END  as  ANT_SUCESS_RATE_DO_2_3  ,
				  ROUND(SUM(EQU_USER_NUM_DO),3)  as  EQU_USER_NUM_DO  ,
				  ROUND(SUM(TRAFFIC_1X_REV_ALL),3)  as  TRAFFIC_1X_REV_ALL  ,
				  SUM(DRC_FWD_LESS_3072_DO)  as  DRC_FWD_LESS_3072_DO  ,
				  SUM(DRC_FWD_3072_1228_DO)  as  DRC_FWD_3072_1228_DO  ,
				  SUM(DRC_FWD_MORE_1228_DO)  as  DRC_FWD_MORE_1228_DO  ,
				  CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_LESS_3072_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as  DRC_FWD_LESS_3072_RATE  ,
				  CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_3072_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as  DRC_FWD_3072_1228_RATE  ,
				  CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_MORE_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as  DRC_FWD_MORE_1228_RATE  ,
				  CASE WHEN SUM(INN_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_BS_SHO_SUC_DO)/SUM(INN_BS_SHO_ATT_DO),3) END  as  INN_BS_SHO_SUC_RATE  ,
				  SUM(INN_BS_SHO_ATT_DO)  as  INN_BS_SHO_ATT_DO  ,
				  SUM(INN_BS_SHO_SUC_DO)  as  INN_BS_SHO_SUC_DO  ,
				  CASE WHEN SUM(INTER_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_BS_SHO_SUC_DO)/SUM(INTER_BS_SHO_ATT_DO),3) END  as  INTER_BS_SHO_SUC_RATE  ,
				  SUM(INTER_BS_SHO_ATT_DO)  as  INTER_BS_SHO_ATT_DO  ,
				  SUM(INTER_BS_SHO_SUC_DO)  as  INTER_BS_SHO_SUC_DO  ,
				  CASE WHEN SUM(INN_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_AN_HHO_SUC_DO)/SUM(INN_AN_HHO_ATT_DO),3) END  as  INN_AN_HHO_SUC_RATE  ,
				  SUM(INN_AN_HHO_ATT_DO)  as  INN_AN_HHO_ATT_DO  ,
				  SUM(INN_AN_HHO_SUC_DO)  as  INN_AN_HHO_SUC_DO  ,
				  CASE WHEN SUM(INTER_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_AN_HHO_SUC_DO)/SUM(INTER_AN_HHO_ATT_DO),3) END  as  INTER_AN_HHO_SUC_RATE  ,
				  SUM(INTER_AN_HHO_ATT_DO)  as  INTER_AN_HHO_ATT_DO  ,
				  SUM(INTER_AN_HHO_SUC_DO)  as  INTER_AN_HHO_SUC_DO  ,
				  (100-((CASE WHEN SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0)) = 0 THEN 0 ELSE  ROUND(SUM(NVL(TCH_DROP_NUM_CARRIER,0))/SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0))* 100,3) END*1.3)+(100-(CASE WHEN SUM(NVL(CALL_ATT_CARRIER,0)) = 0 THEN 100 ELSE ROUND(SUM(NVL(TCH_ASSIGN_SUC_CARRIER,0))/SUM(NVL(CALL_ATT_CARRIER,0)),4) * 100 END))))  as  CALL_AVG_RATE  ,
				  CASE WHEN SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0)) = 0 THEN 0 ELSE  ROUND(SUM(NVL(TCH_DROP_NUM_CARRIER,0))/SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0))* 100,3) END  as  CALL_AVG_RATE1  ,
				  CASE WHEN SUM(NVL(CALL_ATT_CARRIER,0)) = 0 THEN 100 ELSE   ROUND(SUM(NVL(TCH_ASSIGN_SUC_CARRIER,0))/SUM(NVL(CALL_ATT_CARRIER,0)),4) * 100 END  as  CALL_AVG_RATE2  ,
				  (100-((100-(CASE WHEN SUM(NVL(CONN_ATT_DO_CARRIER,0))=0 THEN 0 ELSE ROUND(SUM(NVL(CONN_SUC_DO_CARRIER,0)) / SUM(NVL(CONN_ATT_DO_CARRIER,0)) * 100, 2) END))*1.3+(CASE WHEN SUM(NVL(CONN_SUCC_DO_CARRIER,0))=0 THEN 0 ELSE ROUND(SUM(NVL(CALL_DROP_DO_CARRIER,0)) / SUM(NVL(CONN_SUCC_DO_CARRIER,0)) * 100, 3) END)))  as  THREEG_AVG_RATE  ,
				  CASE WHEN SUM(NVL(CONN_ATT_DO_CARRIER,0))=0 THEN 0 ELSE ROUND(SUM(NVL(CONN_SUC_DO_CARRIER,0)) / SUM(NVL(CONN_ATT_DO_CARRIER,0)) * 100, 2) END  as  THREEG_AVG_RATE1  ,
				  CASE WHEN SUM(NVL(CONN_SUCC_DO_CARRIER, 0)) = 0 THEN  0 ELSE ROUND(SUM(NVL(CALL_DROP_DO_CARRIER, 0)) / SUM(NVL(CONN_SUCC_DO_CARRIER, 0)) * 100, 3) END  as  THREEG_AVG_RATE2  ,
				  SUM(NVL(TCH_DROP_NUM_CARRIER,0))  as  TCH_DROP_NUM_CARRIER  ,
				  SUM(NVL(O_TCH_ASSIGN_SUC_CARRIER,0)+NVL(P_TCH_ASSIGN_SUC_CARRIER,0))  as  OP_SUC_NUM_CARRIER  ,
				  SUM(NVL(TCH_ASSIGN_SUC_CARRIER,0))  as  TCH_ASSIGN_SUC_CARRIER  ,
				  SUM(NVL(CALL_ATT_CARRIER,0))  as  CALL_ATT_CARRIER  ,
				  SUM(NVL(CONN_SUC_DO_CARRIER,0))  as  CONN_SUC_DO_CARRIER  ,
				  SUM(NVL(CONN_ATT_DO_CARRIER,0))  as  CONN_ATT_DO_CARRIER  ,
				  SUM(NVL(CALL_DROP_DO_CARRIER, 0))  as  CALL_DROP_DO_CARRIER  ,
				  SUM(NVL(CONN_SUCC_DO_CARRIER, 0))  as  CONN_SUCC_DO_CARRIER  ,
				  SUM(DO_CONN_ATT)-SUM(DO_SUC_CONN_NUM)  as  DO_FAIL_CONN_NUM  ,
				  CASE WHEN SUM(DO_FWD_SLOT)=0 THEN 0 ELSE ROUND(SUM(DO_FWD_BYTE)*8/1000/(SUM(DO_FWD_SLOT)*0.001667),2) END  as  FWD_RLP_AVG_RATE  ,
				  ROUND(AVG(SESSION_AVG_NUM),2)  as  SESSION_AVG_NUM  ,
				  ROUND(AVG(ACTIVE_SESSION_NUM),2)  as  ACTIVE_SESSION_NUM  ,
				  ROUND(AVG(NON_ACTIVE_SESSION_NUM),2)  as  NON_ACTIVE_SESSION_NUM  ,
				  SUM(INTER_BSC_HHO_ADD_ATT_VOICE)  as  INTER_BSC_HHO_ADD_ATT_VOICE  ,
				  SUM(INTER_BSC_HHO_ADD_SUC_VOICE)  as  INTER_BSC_HHO_ADD_SUC_VOICE  ,
				  CASE WHEN SUM(INTER_BSC_HHO_ADD_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_ADD_SUC_VOICE)/SUM(INTER_BSC_HHO_ADD_ATT_VOICE)*100,2) END  as  INTER_BSC_HHO_ADD_SUC_RAT  ,
				  SUM(INTER_BSC_HHO_OFF_ATT_VOICE)  as  INTER_BSC_HHO_OFF_ATT_VOICE  ,
				  SUM(INTER_BSC_HHO_OFF_SUC_VOICE)  as  INTER_BSC_HHO_OFF_SUC_VOICE  ,
				  CASE WHEN SUM(INTER_BSC_HHO_OFF_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_OFF_SUC_VOICE)/SUM(INTER_BSC_HHO_OFF_ATT_VOICE)*100,2) END  as  INTER_BSC_HHO_OFF_SUC_RAT  ,
				  CASE WHEN SUM(RCE_RLB_NUM_DO)=0 THEN 0 ELSE ROUND(100*SUM(RCE_MAX_BUSY_NUM_DO)/SUM(RCE_RLB_NUM_DO),2) END  as  RCE_MAX_BUSY_RATIO_DO  ,
				  MAX(RCE_MAX_BUSY_NUM_DO)  as  RCE_MAX_BUSY_NUM_DO  ,
				  ROUND(AVG(RCE_RLB_NUM_DO),0)  as  RCE_RLB_NUM_DO  ,
				  CASE WHEN SUM(ABIS_FWD_CFG_BW_DO)=0 THEN 0 ELSE ROUND(100*SUM(ABIS_FWD_AVG_BW_DO)/SUM(ABIS_FWD_CFG_BW_DO)/1000,2) END  as  ABIS_FWD_AVG_BW_RATIO_DO  ,
				  ROUND(AVG(ABIS_FWD_AVG_BW_DO),2)  as  ABIS_FWD_AVG_BW_DO  ,
				  ROUND(AVG(ABIS_FWD_CFG_BW_DO),2)  as  ABIS_FWD_CFG_BW_DO  ,
				  CASE WHEN SUM(CONN_ATT_NUM_A8_A10)=0 THEN 0 ELSE ROUND(100*SUM(CONN_SUC_NUM_A8_A10)/SUM(CONN_ATT_NUM_A8_A10),2) END  as  CONN_SUC_RATIO_A8_A10  ,
				  SUM(CONN_SUC_NUM_A8_A10)  as  CONN_SUC_NUM_A8_A10  ,
				  SUM(CONN_ATT_NUM_A8_A10)  as  CONN_ATT_NUM_A8_A10  ,
				  ROUND(AVG(FWD_PHY_CCH_SLOT_RATE_DO),3)  as  FWD_PHY_CCH_SLOT_RATE_DO  ,
				  ROUND(AVG(AVG_ACH_USAGE_DO),3)  as  AVG_ACH_USAGE_DO  ,
				  ROUND(AVG(REV_LINK_BUSY_RATIO_DO),3)  as  REV_LINK_BUSY_RATIO_DO  ,
				  CASE WHEN vendor='ZY0808' THEN ROUND(AVG(PCH_AVG_USAGE),2) 
				  WHEN VENDOR = 'ZY0804' THEN CASE WHEN SUM(PCH_CANTRANSMIT_1X)=0 THEN 0 ELSE ROUND(SUM(PCH_ACTUALTRANSMIT_1X)/SUM(PCH_CANTRANSMIT_1X)*100,2) END  
				  ELSE ROUND(AVG(PCOP),4)*100 END as   PCH_AVG_USAGE   
				from   perf_bsc_c      
				where start_time =  to_date('%%Y-%%M-%%D %%H','yyyy-mm-dd hh24')
					 and city_id = ${city_id}
				  group by
				  to_char(start_time,'yyyy-mm-dd hh24')  ,    
				  CITY_ID  ,    
				  vendorname,
				  BSC  ,
				  china_name,
				  VENDOR
				  order by vendorname, CITY_ID  ,  BSC  
				</sql>
			</mapping>
			<mapping name="GD_PERF_BTS_${city_id}_%%Y%%M%%D%%H.txt" templet="ATM无线网络优化-PERF-BTS.ftl" >
				<sql> 
				select  to_char(start_time,'yyyy-mm-dd hh24')   as  START_TIME  ,
				        c.CITY_ID  ,
				        vendorname,
				        c.BSC  ,
				        n.china_name as bscname ,
				        BTS  ,
				        c.CHINA_NAME  ,
				    SUM(TCH_SETUP_ATT)  as  TCH_SETUP_ATT  ,
				    SUM(TCH_ASSIGN_ATT)  as  TCH_ASSIGN_ATT  ,
				    SUM(TCH_BLOCK_COUNT)  as  TCH_BLOCK_COUNT  ,
				    SUM(SHO_TRAFFIC_CS)  as  SHO_TRAFFIC_CS  ,
				    SUM(TRAFFIC_CS)  as  TRAFFIC_CS  ,
				    SUM(WALSHCODE_ERL)  as  WALSHCODE_ERL  ,
				    SUM(O_TCH_ASSIGN_ATT)  as  O_TCH_ASSIGN_ATT  ,
				    SUM(O_TCH_ASSIGN_SUC)  as  O_TCH_ASSIGN_SUC  ,
				    SUM(P_TCH_ASSIGN_ATT)  as  P_TCH_ASSIGN_ATT  ,
				    SUM(P_TCH_ASSIGN_SUC)  as  P_TCH_ASSIGN_SUC  ,
				    SUM(BSS_HHO_ATT)  as  BSS_HHO_ATT  ,
				    SUM(BSS_HHO_SUC)  as  BSS_HHO_SUC  ,
				    SUM(S_SHO_ATT)  as  S_SHO_ATT  ,
				    SUM(S_SHO_SUC)  as  S_SHO_SUC  ,
				    SUM(LOC_UPDATE_ATT_NUM)  as  LOC_UPDATE_ATT_NUM  ,
				    SUM(LOC_UPDATE_SUC_NUM)  as  LOC_UPDATE_SUC_NUM  ,
				    SUM(TCH_ASSIGN_SUC)  as  TCH_ASSIGN_SUC  ,
				    SUM(TCH_SETUP_SUC)  as  TCH_SETUP_SUC  ,
				    CASE WHEN SUM(TRAFFIC_CS) = 0 THEN 0 ELSE      ROUND(SUM(SHO_TRAFFIC_CS - TRAFFIC_CS)/SUM(TRAFFIC_CS),4) * 100     END   as  S_SWITCH_GENE  ,
				    CASE WHEN  SUM(TCH_SETUP_ATT) = 0 THEN 0   ELSE ROUND(SUM(TCH_BLOCK_COUNT)/SUM(TCH_SETUP_ATT),4)*100 END  as  TCH_BLOCK_RATE  ,
				    CASE WHEN SUM(O_TCH_ASSIGN_ATT) = 0 THEN 0 ELSE  ROUND(SUM(O_TCH_ASSIGN_SUC)/SUM(O_TCH_ASSIGN_ATT),4)*100 END  as  O_TCH_ASSIGN_SUC_RATE  ,
				    CASE WHEN SUM(P_TCH_ASSIGN_ATT) = 0 THEN 0   ELSE ROUND(SUM(P_TCH_ASSIGN_SUC)/SUM(P_TCH_ASSIGN_ATT),4) * 100 END  as  T_TCH_ASSIGN_SUC_RATE  ,
				    CASE WHEN SUM(TCH_SETUP_ATT) = 0 THEN 0 ELSE  ROUND(SUM(TCH_SETUP_SUC)/SUM(TCH_SETUP_ATT),4) * 100 END  as  TCH_ASSIGN_SUC_RATE  ,
				    CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END  as  TCH_CALL_SUC_RATE  ,
				    CASE WHEN SUM(LOC_UPDATE_ATT_NUM) = 0 THEN 0 ELSE   ROUND(SUM(LOC_UPDATE_SUC_NUM)/SUM(LOC_UPDATE_ATT_NUM),4) * 100 END  as  LOC_UPDATE_SUC_RATE  ,
				    CASE WHEN SUM(BSS_HHO_ATT) = 0 THEN 100 ELSE   ROUND(SUM(BSS_HHO_SUC)/SUM(BSS_HHO_ATT),4) * 100 END  as  BSS_HHO_SUC_RATE  ,
				    CASE WHEN SUM(S_SHO_ATT) = 0 THEN 0 ELSE ROUND(SUM(S_SHO_SUC)/SUM(S_SHO_ATT) * 100,2) END  as  S_SHO_SUC_RATE  ,
				    CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END  as  TCH_DROP_RATE  ,
				    CASE WHEN SUM(TCH_DROP_NUM)=0 THEN 0 ELSE ROUND(SUM(TRAFFIC_CS)*60/SUM(TCH_DROP_NUM),2) END  as  TRAFFIC_DROP_RATE  ,
				    SUM(TCH_DROP_NUM)  as  TCH_DROP_NUM  ,
				    SUM(CALL_ATT)  as  CALL_ATT  ,
				    SUM(TRAFFIC_DO_COMMON)  as  TRAFFIC_DO_COMMON  ,
				    CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END  as  DO_SUC_CONN_RATE  ,
				    ROUND(SUM(DATA_THROUGHPUT_FWD_1X)/1000/1024,3)  as  THROUGHPUT_FWD_1X  ,
				    ROUND(SUM(DATA_THROUGHPUT_REV_1X)/1000/1024,3)  as  THROUGHPUT_REV_1X  ,
				    ROUND(AVG(DO_TCH_AVG_SLOT_OCCUPY_RATE),3)  as  DO_TCH_AVG_SLOT_OCCUPY_RATE  ,
				    ROUND(SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)/1024/1024,3)  as  DO_FTCH_RLP_TX  ,
				    ROUND(SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)/1024/1024,3)  as  DO_RTCH_RLP_TX  ,
				    SUM(DO_CONN_ATT)  as  DO_CONN_ATT  ,
				    SUM(DO_SUC_CONN_NUM)  as  DO_SUC_CONN_NUM  ,
				    ROUND(SUM(DO_RLP_FLOWRATE)/1024/1024,3)  as  DO_RLP_FLOWRATE  ,
				    SUM(WIRELESS_CAPACITY)  as  WIRELESS_CAPACITY  ,
				    CASE WHEN AVG(WIRELESS_CAPACITY) = 0 THEN 0 ELSE ROUND(AVG(TRAFFIC_1X_REV_ALL) / AVG(WIRELESS_CAPACITY) * 100, 3) END  as  TCH_LOAD_RATIO  ,
				    SUM(nvl(DROPCALLNUM_OTHER_DO,0))  as  DROPCALLNUM_OTHER_DO  ,
				    SUM(nvl(DROPCALLNUM_HARDHOFAIL_DO,0))  as  DROPCALLNUM_HARDHOFAIL_DO  ,
				    SUM(nvl(DROPCALLNUM_RFLOSE_DO,0))  as  DROPCALLNUM_RFLOSE_DO  ,
				    SUM(DO_DROP_NUM)  as  DO_DROP_NUM  ,
				    SUM(DO_SUC_CONN)  as  DO_SUC_CONN_DO  ,
				    CASE WHEN SUM(DO_SUC_CONN) = 0 THEN 0 ELSE ROUND(SUM(DO_DROP_NUM)/SUM(DO_SUC_CONN),4)*100 END  as  DO_DROP_RATE_2_22  ,
				    ROUND(SUM(EQU_USER_NUM_DO),3)  as  EQU_USER_NUM_DO  ,
				    ROUND(SUM(TRAFFIC_1X_REV_ALL),3)  as  TRAFFIC_1X_REV_ALL  ,
				    CASE WHEN SUM(UATI_ATT_NUM) = 0 THEN 0 ELSE ROUND(SUM(UATI_SUC_NUM)/SUM(UATI_ATT_NUM),4)*100 END  as  UATI_ASSIGN_SUC_RATE_3_1  ,
				    SUM(UATI_ATT_NUM)  as  UATI_ATT_NUM_3_2  ,
				    SUM(UATI_SUC_NUM)  as  UATI_SUC_NUM_3_3  ,
				    SUM(DRC_FWD_LESS_3072_DO)  as  DRC_FWD_LESS_3072_DO  ,
				    SUM(DRC_FWD_3072_1228_DO)  as  DRC_FWD_3072_1228_DO  ,
				    SUM(DRC_FWD_MORE_1228_DO)  as  DRC_FWD_MORE_1228_DO  ,
				    CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_LESS_3072_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as  DRC_FWD_LESS_3072_RATE  ,
				    CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_3072_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as  DRC_FWD_3072_1228_RATE  ,
				    CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_MORE_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END  as  DRC_FWD_MORE_1228_RATE  ,
				    CASE WHEN SUM(INN_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_BS_SHO_SUC_DO)/SUM(INN_BS_SHO_ATT_DO),3) END  as  INN_BS_SHO_SUC_RATE  ,
				    SUM(INN_BS_SHO_ATT_DO)  as  INN_BS_SHO_ATT_DO  ,
				    SUM(INN_BS_SHO_SUC_DO)  as  INN_BS_SHO_SUC_DO  ,
				    CASE WHEN SUM(INTER_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_BS_SHO_SUC_DO)/SUM(INTER_BS_SHO_ATT_DO),3) END  as  INTER_BS_SHO_SUC_RATE  ,
				    SUM(INTER_BS_SHO_ATT_DO)  as  INTER_BS_SHO_ATT_DO  ,
				    SUM(INTER_BS_SHO_SUC_DO)  as  INTER_BS_SHO_SUC_DO  ,
				    CASE WHEN SUM(INN_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_AN_HHO_SUC_DO)/SUM(INN_AN_HHO_ATT_DO),3) END  as  INN_AN_HHO_SUC_RATE  ,
				    SUM(INN_AN_HHO_ATT_DO)  as  INN_AN_HHO_ATT_DO  ,
				    SUM(INN_AN_HHO_SUC_DO)  as  INN_AN_HHO_SUC_DO  ,
				    CASE WHEN SUM(INTER_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_AN_HHO_SUC_DO)/SUM(INTER_AN_HHO_ATT_DO),3) END  as  INTER_AN_HHO_SUC_RATE  ,
				    SUM(INTER_AN_HHO_ATT_DO)  as  INTER_AN_HHO_ATT_DO  ,
				    SUM(INTER_AN_HHO_SUC_DO)  as  INTER_AN_HHO_SUC_DO  ,
				    ROUND(AVG(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)*8/1000/3600,3)  as  FTCH_RLP_TX_DO_6_5  ,
				    CASE WHEN SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) = 0 THEN 0 ELSE ROUND(SUM(FTCH_RLP_RETX_DO)/SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) * 100,2) END  as  FTCH_RLP_RATE_6_5  ,
				    ROUND(AVG(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)*8/1000/3600,3)  as  RTCH_RLP_TX_DO_6_7  ,
				    CASE WHEN SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)=0 THEN 0 ELSE ROUND(SUM(RTCH_RLP_RETX_DO)/SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO) * 100,4) END  as  RTCH_RLP_RETX_RATE_6_8  ,
				    (100-((CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END*1.3)+(100-(CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END))))  as  CALL_AVG_RATE  ,
				    (100-((100-(CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END))*1.3+(CASE WHEN SUM(CONN_SUC_DO)=0 THEN 0 ELSE ROUND(SUM(CALL_DROP_DO) / SUM(CONN_SUC_DO) * 100, 3) END)))  as  THREEG_AVG_RATE  ,
				    CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END  as  CALL_AVG_RATE1  ,
				    CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END  as  THREEG_AVG_RATE1  ,
				    CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END  as  CALL_AVG_RATE2  ,
				    CASE WHEN SUM(DO_SUC_CONN) = 0 THEN 0 ELSE ROUND(SUM(DO_DROP_NUM)/SUM(DO_SUC_CONN),4)*100 END  as  THREEG_AVG_RATE2  ,
				    SUM(DO_CONN_ATT)-SUM(DO_SUC_CONN_NUM)  as  DO_FAIL_CONN_NUM  ,
				    CASE WHEN SUM(DO_FWD_SLOT)=0 THEN 0 ELSE ROUND(SUM(DO_FWD_BYTE)*8/1000/(SUM(DO_FWD_SLOT)*0.001667),2) END  as  FWD_RLP_AVG_RATE  ,
				    SUM(INTER_BSC_HHO_ADD_ATT_VOICE)  as  INTER_BSC_HHO_ADD_ATT_VOICE  ,
				    SUM(INTER_BSC_HHO_ADD_SUC_VOICE)  as  INTER_BSC_HHO_ADD_SUC_VOICE  ,
				    CASE WHEN SUM(INTER_BSC_HHO_ADD_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_ADD_SUC_VOICE)/SUM(INTER_BSC_HHO_ADD_ATT_VOICE)*100,2) END  as  INTER_BSC_HHO_ADD_SUC_RAT  ,
				    SUM(INTER_BSC_HHO_OFF_ATT_VOICE)  as  INTER_BSC_HHO_OFF_ATT_VOICE  ,
				    SUM(INTER_BSC_HHO_OFF_SUC_VOICE)  as  INTER_BSC_HHO_OFF_SUC_VOICE  ,
				    CASE WHEN SUM(INTER_BSC_HHO_OFF_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_OFF_SUC_VOICE)/SUM(INTER_BSC_HHO_OFF_ATT_VOICE)*100,2) END  as  INTER_BSC_HHO_OFF_SUC_RAT  ,
				    CASE WHEN SUM(RCE_RLB_NUM_DO)=0 THEN 0 ELSE ROUND(100*SUM(RCE_MAX_BUSY_NUM_DO)/SUM(RCE_RLB_NUM_DO),2) END  as  RCE_MAX_BUSY_RATIO_DO  ,
				    MAX(RCE_MAX_BUSY_NUM_DO)  as  RCE_MAX_BUSY_NUM_DO  ,
				    ROUND(AVG(RCE_RLB_NUM_DO),0)  as  RCE_RLB_NUM_DO  ,
				    CASE WHEN SUM(ABIS_FWD_CFG_BW_DO)=0 THEN 0 ELSE ROUND(100*SUM(ABIS_FWD_AVG_BW_DO)/SUM(ABIS_FWD_CFG_BW_DO)/1000,2) END  as  ABIS_FWD_AVG_BW_RATIO_DO  ,
				    ROUND(AVG(ABIS_FWD_AVG_BW_DO),2)  as  ABIS_FWD_AVG_BW_DO  ,
				    ROUND(AVG(ABIS_FWD_CFG_BW_DO),2)  as  ABIS_FWD_CFG_BW_DO  ,
				    CASE WHEN SUM(CONN_ATT_NUM_A8_A10)=0 THEN 0 ELSE ROUND(100*SUM(CONN_SUC_NUM_A8_A10)/SUM(CONN_ATT_NUM_A8_A10),2) END  as  CONN_SUC_RATIO_A8_A10  ,
				    SUM(CONN_SUC_NUM_A8_A10)  as  CONN_SUC_NUM_A8_A10  ,
				    SUM(CONN_ATT_NUM_A8_A10)  as  CONN_ATT_NUM_A8_A10  ,
				    ROUND(AVG(FWD_PHY_CCH_SLOT_RATE_DO),3)  as  FWD_PHY_CCH_SLOT_RATE_DO  ,
				    ROUND(AVG(AVG_ACH_USAGE_DO),3)  as  AVG_ACH_USAGE_DO  ,
				    ROUND(AVG(REV_LINK_BUSY_RATIO_DO),3)  as  REV_LINK_BUSY_RATIO_DO  ,
				    ROUND(AVG(CASE WHEN c.VENDOR = 'ZY0808' THEN RSSIAVG ELSE AVG_RSSI_M END),4)  as  RSSIAVG  ,
				    ROUND(ABS(AVG(CASE WHEN c.VENDOR = 'ZY0808' THEN RSSI_DIV_AVG-RSSIAVG ELSE AVG_RSSI_M-AVG_RSSI_D END)),4)  as  RSSI_MAIN_DIV_AVG_DIFF  ,
				    ROUND(AVG(CASE WHEN c.VENDOR = 'ZY0808' THEN RSSI_DIV_AVG ELSE AVG_RSSI_D END),4)  as  RSSI_DIV_AVG 
				  from perf_bts_c c ,ne_bsc_c n   
				  where 
				  c.CITY_ID = n.city_id
				  and c.RELATED_BSC = n.ne_sys_id
				  and start_time =  to_date('%%Y-%%M-%%D %%H','yyyy-mm-dd hh24')
				  and c.city_id = ${city_id}
				  group by   to_char(start_time,'yyyy-mm-dd hh24')   ,    
				    c.CITY_ID  ,    
				    vendorname,
				    c.BSC  ,
				    c.CHINA_NAME    ,
				    BTS  ,    
				    n.CHINA_NAME
				  order by vendorname, 
				   CITY_ID  ,   
				    BSC  ,  
				    BTS
				</sql>
			</mapping>
			<mapping name="GD_PERF_CELL_${city_id}_%%Y%%M%%D%%H.txt" templet="ATM无线网络优化-PERF-CELL.ftl" >
				<sql> 
					select 	to_char(start_time,'yyyy-mm-dd hh24')	as	START_TIME	,
							CITY_ID	,
						china_name as 	CELLNAME	,
						related_bscname	as BSCNAME	,
					 VENDORNAME	,
							BTS	,
							CELL	,
							BSC	,
					SUM(TCH_ASSIGN_SUC)	as	TCH_ASSIGN_SUC	,
					SUM(TCH_SETUP_SUC)	as	TCH_SETUP_SUC	,
					SUM(TCH_ASSIGN_ATT)	as	TCH_ASSIGN_ATT	,
					SUM(TCH_BLOCK_COUNT)	as	TCH_BLOCK_COUNT	,
					SUM(SHO_TRAFFIC_CS)	as	SHO_TRAFFIC_CS	,
					SUM(TRAFFIC_CS)	as	TRAFFIC_CS	,
					SUM(WALSHCODE_ERL)	as	WALSHCODE_ERL	,
					SUM(O_TCH_ASSIGN_ATT)	as	O_TCH_ASSIGN_ATT	,
					SUM(O_TCH_ASSIGN_SUC)	as	O_TCH_ASSIGN_SUC	,
					SUM(P_TCH_ASSIGN_ATT)	as	P_TCH_ASSIGN_ATT	,
					SUM(P_TCH_ASSIGN_SUC)	as	P_TCH_ASSIGN_SUC	,
					SUM(BSS_HHO_ATT)	as	BSS_HHO_ATT	,
					SUM(BSS_HHO_SUC)	as	BSS_HHO_SUC	,
					SUM(S_SHO_ATT)	as	S_SHO_ATT	,
					SUM(S_SHO_SUC)	as	S_SHO_SUC	,
					SUM(LOC_UPDATE_ATT_NUM)	as	LOC_UPDATE_ATT_NUM	,
					CASE WHEN SUM(TRAFFIC_CS) = 0 THEN 0 ELSE
			     ROUND(SUM(SHO_TRAFFIC_CS - TRAFFIC_CS)/SUM(TRAFFIC_CS),4) * 100
			     END 	as	S_SWITCH_GENE	,
					CASE WHEN  SUM(TCH_SETUP_ATT) = 0 THEN 0   ELSE ROUND(SUM(TCH_BLOCK_COUNT)/SUM(TCH_SETUP_ATT),4)*100 END	as	TCH_BLOCK_RATE	,
					SUM(LOC_UPDATE_SUC_NUM)	as	LOC_UPDATE_SUC_NUM	,
					CASE WHEN SUM(O_TCH_ASSIGN_ATT) = 0 THEN 0 ELSE  ROUND(SUM(O_TCH_ASSIGN_SUC)/SUM(O_TCH_ASSIGN_ATT),4)*100 END	as	O_TCH_ASSIGN_SUC_RATE	,
					CASE WHEN SUM(P_TCH_ASSIGN_ATT) = 0 THEN 0
			  ELSE ROUND(SUM(P_TCH_ASSIGN_SUC)/SUM(P_TCH_ASSIGN_ATT),4) * 100 END	as	T_TCH_ASSIGN_SUC_RATE	,
					CASE WHEN SUM(TCH_SETUP_ATT) = 0 THEN 0 ELSE
			  ROUND(SUM(TCH_SETUP_SUC)/SUM(TCH_SETUP_ATT),4) * 100 END 	as	TCH_ASSIGN_SUC_RATE	,
					CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END	as	TCH_CALL_SUC_RATE	,
					CASE WHEN SUM(LOC_UPDATE_ATT_NUM) = 0 THEN 0 ELSE
			  ROUND(SUM(LOC_UPDATE_SUC_NUM)/SUM(LOC_UPDATE_ATT_NUM),4) * 100 END	as	LOC_UPDATE_SUC_RATE	,
					CASE WHEN SUM(BSS_HHO_ATT) = 0 THEN 100 ELSE   ROUND(SUM(BSS_HHO_SUC)/SUM(BSS_HHO_ATT),4) * 100 END	as	BSS_HHO_SUC_RATE	,
					CASE WHEN SUM(S_SHO_ATT) = 0 THEN 0 ELSE ROUND(SUM(S_SHO_SUC)/SUM(S_SHO_ATT) * 100,2) END	as	S_SHO_SUC_RATE	,
					CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END	as	TCH_DROP_RATE	,
					CASE WHEN SUM(TCH_DROP_NUM)=0 THEN 0 ELSE ROUND(SUM(TRAFFIC_CS)*60/SUM(TCH_DROP_NUM),2) END	as	TRAFFIC_DROP_RATE	,
					SUM(TCH_DROP_NUM)	as	TCH_DROP_NUM	,
					SUM(CALL_ATT)	as	CALL_ATT	,
					SUM(TCH_SETUP_ATT)	as	TCH_SETUP_ATT	,
					SUM(TRAFFIC_DO_COMMON)	as	TRAFFIC_DO_COMMON	,
					CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END	as	DO_SUC_CONN_RATE	,
					ROUND(SUM(DATA_THROUGHPUT_FWD_1X)/1000/1024,3)	as	THROUGHPUT_FWD_1X	,
					ROUND(SUM(DATA_THROUGHPUT_REV_1X)/1000/1024,3)	as	THROUGHPUT_REV_1X	,
					ROUND(AVG(DO_TCH_AVG_SLOT_OCCUPY_RATE),3)	as	DO_TCH_AVG_SLOT_OCCUPY_RATE	,
					ROUND(SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)/1024/1024,3)	as	DO_FTCH_RLP_TX	,
					ROUND(SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)/1024/1024,3)	as	DO_RTCH_RLP_TX	,
					SUM(DO_CONN_ATT)	as	DO_CONN_ATT	,
					SUM(DO_SUC_CONN_NUM)	as	DO_SUC_CONN_NUM	,
					ROUND(SUM(DO_RLP_FLOWRATE)/1024/1024,3)	as	DO_RLP_FLOWRATE	,
					SUM(WIRELESS_CAPACITY)	as	WIRELESS_CAPACITY	,
					CASE WHEN AVG(WIRELESS_CAPACITY) = 0 THEN 0 ELSE ROUND(AVG(TRAFFIC_1X_REV_ALL) / AVG(WIRELESS_CAPACITY) * 100, 3) END	as	TCH_LOAD_RATIO	,
					SUM(nvl(DROPCALLNUM_OTHER_DO,0))	as	DROPCALLNUM_OTHER_DO	,
					SUM(nvl(DROPCALLNUM_HARDHOFAIL_DO,0))	as	DROPCALLNUM_HARDHOFAIL_DO	,
					SUM(nvl(DROPCALLNUM_RFLOSE_DO,0))	as	DROPCALLNUM_RFLOSE_DO	,
					SUM(DO_DROP_NUM)	as	DO_DROP_NUM	,
					SUM(DO_SUC_CONN)	as	DO_SUC_CONN_DO	,
					CASE WHEN SUM(DO_SUC_CONN) = 0 THEN 0 ELSE ROUND(SUM(DO_DROP_NUM)/SUM(DO_SUC_CONN),4)*100 END	as	DO_DROP_RATE_2_22	,
					ROUND(SUM(EQU_USER_NUM_DO),3)	as	EQU_USER_NUM_DO	,
					ROUND(SUM(TRAFFIC_1X_REV_ALL),3)	as	TRAFFIC_1X_REV_ALL	,
					CASE WHEN SUM(UATI_ATT_NUM) = 0 THEN 0 ELSE ROUND(SUM(UATI_SUC_NUM)/SUM(UATI_ATT_NUM),4)*100 END	as	UATI_ASSIGN_SUC_RATE_3_1	,
					SUM(UATI_ATT_NUM)	as	UATI_ATT_NUM_3_2	,
					SUM(UATI_SUC_NUM)	as	UATI_SUC_NUM_3_3	,
					SUM(DRC_FWD_LESS_3072_DO)	as	DRC_FWD_LESS_3072_DO	,
					SUM(DRC_FWD_3072_1228_DO)	as	DRC_FWD_3072_1228_DO	,
					SUM(DRC_FWD_MORE_1228_DO)	as	DRC_FWD_MORE_1228_DO	,
					CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_LESS_3072_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END	as	DRC_FWD_LESS_3072_RATE	,
					CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_3072_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END	as	DRC_FWD_3072_1228_RATE	,
					CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_MORE_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END	as	DRC_FWD_MORE_1228_RATE	,
					CASE WHEN SUM(INN_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_BS_SHO_SUC_DO)/SUM(INN_BS_SHO_ATT_DO),3) END	as	INN_BS_SHO_SUC_RATE	,
					SUM(INN_BS_SHO_ATT_DO)	as	INN_BS_SHO_ATT_DO	,
					SUM(INN_BS_SHO_SUC_DO)	as	INN_BS_SHO_SUC_DO	,
					CASE WHEN SUM(INTER_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_BS_SHO_SUC_DO)/SUM(INTER_BS_SHO_ATT_DO),3) END	as	INTER_BS_SHO_SUC_RATE	,
					SUM(INTER_BS_SHO_ATT_DO)	as	INTER_BS_SHO_ATT_DO	,
					SUM(INTER_BS_SHO_SUC_DO)	as	INTER_BS_SHO_SUC_DO	,
					CASE WHEN SUM(INN_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_AN_HHO_SUC_DO)/SUM(INN_AN_HHO_ATT_DO),3) END	as	INN_AN_HHO_SUC_RATE	,
					SUM(INN_AN_HHO_ATT_DO)	as	INN_AN_HHO_ATT_DO	,
					SUM(INN_AN_HHO_SUC_DO)	as	INN_AN_HHO_SUC_DO	,
					CASE WHEN SUM(INTER_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_AN_HHO_SUC_DO)/SUM(INTER_AN_HHO_ATT_DO),3) END	as	INTER_AN_HHO_SUC_RATE	,
					SUM(INTER_AN_HHO_ATT_DO)	as	INTER_AN_HHO_ATT_DO	,
					SUM(INTER_AN_HHO_SUC_DO)	as	INTER_AN_HHO_SUC_DO	,
					ROUND(AVG(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)*8/1000/3600,3)	as	FTCH_RLP_TX_DO_6_5	,
					CASE WHEN SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) = 0 THEN 0 ELSE ROUND(SUM(FTCH_RLP_RETX_DO)/SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) * 100,2) END	as	FTCH_RLP_RATE_6_5	,
					ROUND(AVG(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)*8/1000/3600,3)	as	RTCH_RLP_TX_DO_6_7	,
					CASE WHEN SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)=0 THEN 0 ELSE ROUND(SUM(RTCH_RLP_RETX_DO)/SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO) * 100,4) END	as	RTCH_RLP_RETX_RATE_6_8	,
					(100-((CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END*1.3)+(100-(CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END))))	as	CALL_AVG_RATE	,
					(100-((100-(CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END))*1.3+(CASE WHEN SUM(CONN_SUC_DO)=0 THEN 0 ELSE ROUND(SUM(CALL_DROP_DO) / SUM(CONN_SUC_DO) * 100, 3) END)))	as	THREEG_AVG_RATE	,
					CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END	as	CALL_AVG_RATE1	,
					CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END	as	THREEG_AVG_RATE1	,
					CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END	as	CALL_AVG_RATE2	,
					CASE WHEN SUM(DO_SUC_CONN) = 0 THEN 0 ELSE ROUND(SUM(DO_DROP_NUM)/SUM(DO_SUC_CONN),4)*100 END	as	THREEG_AVG_RATE2	,
					SUM(DO_CONN_ATT)-SUM(DO_SUC_CONN_NUM)	as	DO_FAIL_CONN_NUM	,
					ROUND(SUM(AUTH_ATT_DO),3)	as	AUTH_ATT_DO	,
					ROUND(SUM(HRPD_SESS_SETUP_SUC_DO),3)	as	HRPD_SESS_SETUP_SUC_DO	,
					SUM(RTCH_RLP_TX_DO)	as	RTCH_RLP_TX_DO	,
					CASE WHEN SUM(AUTH_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AUTH_SUC_DO) / SUM(AUTH_ATT_DO) * 100, 3) END	as	AUTH_SUC_RATE_DO	,
					CASE WHEN SUM(HRPD_SESS_SETUP_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(HRPD_SESS_SETUP_SUC_DO) / SUM(HRPD_SESS_SETUP_ATT_DO) * 100, 3) END	as	HRPD_SESS_SETUP_SUC_RATE_DO	,
					CASE WHEN SUM(RTCH_RLP_TX_DO)=0 THEN 0 ELSE ROUND(SUM(RTCH_RLP_RETX_DO) / SUM(RTCH_RLP_TX_DO) /1000 * 100, 3) END	as	RTCH_RLP_RETX_RATE_DO	,
					CASE SUM(FTCH_RLP_TX_DO) WHEN 0 THEN 0 ELSE ROUND(SUM(FTCH_RLP_RETX_DO)/SUM(FTCH_RLP_TX_DO) * 100, 3) END	as	FTCH_RLP_RETX_RATE_DO	,
					ROUND(SUM(AT_CONN_SUC_DO),3)	as	AT_CONN_SUC_DO	,
					ROUND(SUM(AT_CONN_ATT_DO),3)	as	AT_CONN_ATT_DO	,
					ROUND(SUM(AN_CONN_SUC_DO),3)	as	AN_CONN_SUC_DO	,
					ROUND(SUM(AN_CONN_ATT_DO),3)	as	AN_CONN_ATT_DO	,
					ROUND(SUM(HRPD_SESS_SETUP_ATT_DO),3)	as	HRPD_SESS_SETUP_ATT_DO	,
					ROUND(SUM(FTCH_RLP_TX_DO),3)	as	FTCH_RLP_TX_DO	,
					ROUND(SUM(AUTH_SUC_DO),3)	as	AUTH_SUC_DO	,
					CASE WHEN SUM(AN_CONN_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AN_CONN_SUC_DO) / SUM(AN_CONN_ATT_DO) * 100, 3) END	as	AN_CONN_SUC_RATE_DO	,
					CASE WHEN SUM(AT_CONN_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AT_CONN_SUC_DO) / SUM(AT_CONN_ATT_DO) * 100, 3) END	as	AT_CONN_SUC_RATE_DO	,
					CASE WHEN SUM(CONN_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(CONN_SUC_DO) / SUM(CONN_ATT_DO) * 100, 3) END	as	CONN_SUC_RATE_DO	,
					CASE WHEN SUM(DO_FWD_SLOT)=0 THEN 0 ELSE ROUND(SUM(DO_FWD_BYTE)*8/1000/(SUM(DO_FWD_SLOT)*0.001667),2) END	as	FWD_RLP_AVG_RATE	,
					SUM(INTER_BSC_HHO_ADD_ATT_VOICE)	as	INTER_BSC_HHO_ADD_ATT_VOICE	,
					SUM(INTER_BSC_HHO_ADD_SUC_VOICE)	as	INTER_BSC_HHO_ADD_SUC_VOICE	,
					CASE WHEN SUM(INTER_BSC_HHO_ADD_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_ADD_SUC_VOICE)/SUM(INTER_BSC_HHO_ADD_ATT_VOICE)*100,2) END	as	INTER_BSC_HHO_ADD_SUC_RAT	,
					SUM(INTER_BSC_HHO_OFF_ATT_VOICE)	as	INTER_BSC_HHO_OFF_ATT_VOICE	,
					SUM(INTER_BSC_HHO_OFF_SUC_VOICE)  as  INTER_BSC_HHO_OFF_SUC_VOICE  ,
			    CASE WHEN SUM(INTER_BSC_HHO_OFF_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_OFF_SUC_VOICE)/SUM(INTER_BSC_HHO_OFF_ATT_VOICE)*100,2) END  as  INTER_BSC_HHO_OFF_SUC_RAT  ,
			    CASE WHEN SUM(CONN_ATT_NUM_A8_A10)=0 THEN 0 ELSE ROUND(100*SUM(CONN_SUC_NUM_A8_A10)/SUM(CONN_ATT_NUM_A8_A10),2) END  as  CONN_SUC_RATIO_A8_A10  ,
			    SUM(CONN_SUC_NUM_A8_A10)  as  CONN_SUC_NUM_A8_A10  ,
			    SUM(CONN_ATT_NUM_A8_A10)  as  CONN_ATT_NUM_A8_A10  ,
			    ROUND(AVG(FWD_PHY_CCH_SLOT_RATE_DO),3)  as  FWD_PHY_CCH_SLOT_RATE_DO  ,
			    ROUND(AVG(AVG_ACH_USAGE_DO),3)  as  AVG_ACH_USAGE_DO  ,
			    ROUND(AVG(REV_LINK_BUSY_RATIO_DO),3)  as  REV_LINK_BUSY_RATIO_DO  ,
			    ROUND(ABS(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSI_DIV_AVG-RSSIAVG ELSE AVG_RSSI_M-AVG_RSSI_D END)),4)  as  RSSI_MAIN_DIV_AVG_DIFF  ,
			    ROUND(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSI_DIV_AVG ELSE AVG_RSSI_D END),4)  as  RSSI_DIV_AVG  ,
			    ROUND(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSIAVG ELSE AVG_RSSI_M END),4)
			  as  RSSIAVG  
			  from perf_cell_c        
			  where start_time =  to_date('%%Y-%%M-%%D %%H','yyyy-mm-dd hh24')
			        and city_id = ${city_id}
			  group by   to_char(start_time,'yyyy-mm-dd hh24')  ,    
			    CITY_ID  ,
			    vendorname,    
			    china_name  ,    
			    related_BSCNAME  ,    
			    vendor  ,    
			    BTS  ,    
			    CELL  ,    
			    BSC      
			  order by   vendorname,CITY_ID  ,    
			    BSC  ,    
			    BTS  ,    
			    CELL      
				</sql>
			</mapping>
			<mapping name="GD_PERF_CARR_1X_${city_id}_%%Y%%M%%D%%H.txt" templet="ATM无线网络优化-PERF-CARR-1X.ftl" >
				<sql> 
			       	select	to_char(start_time,'yyyy-mm-dd hh24')	as	START_TIME	,
				CITY_ID	,
				CHINA_NAME	,
				RELATED_BSCNAME	as BSCNAME,
				VENDORNAME	,
				CARR AS CARRIER	,
				CELL	,
				BTS	,
				BSC	,
		SUM(P_TCH_ASSIGN_ATT)	as	P_TCH_ASSIGN_ATT	,
		SUM(P_TCH_ASSIGN_SUC)	as	P_TCH_ASSIGN_SUC	,
		SUM(BSS_HHO_ATT)	as	BSS_HHO_ATT	,
		SUM(BSS_HHO_SUC)	as	BSS_HHO_SUC	,
		SUM(S_SHO_ATT)	as	S_SHO_ATT	,
		SUM(S_SHO_SUC)	as	S_SHO_SUC	,
		SUM(LOC_UPDATE_ATT_NUM)	as	LOC_UPDATE_ATT_NUM	,
		CASE WHEN SUM(TRAFFIC_CS) = 0 THEN 0 ELSE
     ROUND(SUM(SHO_TRAFFIC_CS - TRAFFIC_CS)/SUM(TRAFFIC_CS),4) * 100
     END 	as	S_SWITCH_GENE	,
		CASE WHEN  SUM(TCH_SETUP_ATT) = 0 THEN 0   ELSE ROUND(SUM(TCH_BLOCK_COUNT)/SUM(TCH_SETUP_ATT),4)*100 END	as	TCH_BLOCK_RATE	,
		SUM(LOC_UPDATE_SUC_NUM)	as	LOC_UPDATE_SUC_NUM	,
		CASE WHEN SUM(O_TCH_ASSIGN_ATT) = 0 THEN 0 ELSE  ROUND(SUM(O_TCH_ASSIGN_SUC)/SUM(O_TCH_ASSIGN_ATT),4)*100 END	as	O_TCH_ASSIGN_SUC_RATE	,
		CASE WHEN SUM(P_TCH_ASSIGN_ATT) = 0 THEN 0
  ELSE ROUND(SUM(P_TCH_ASSIGN_SUC)/SUM(P_TCH_ASSIGN_ATT),4) * 100 END	as	T_TCH_ASSIGN_SUC_RATE	,
		CASE WHEN SUM(TCH_SETUP_ATT) = 0 THEN 0 ELSE
  ROUND(SUM(TCH_SETUP_SUC)/SUM(TCH_SETUP_ATT),4) * 100 END	as	TCH_ASSIGN_SUC_RATE	,
		CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END	as	TCH_CALL_SUC_RATE	,
		CASE WHEN SUM(LOC_UPDATE_ATT_NUM) = 0 THEN 0 ELSE
  ROUND(SUM(LOC_UPDATE_SUC_NUM)/SUM(LOC_UPDATE_ATT_NUM),4) * 100 END	as	LOC_UPDATE_SUC_RATE	,
		CASE WHEN SUM(BSS_HHO_ATT) = 0 THEN 100 ELSE   ROUND(SUM(BSS_HHO_SUC)/SUM(BSS_HHO_ATT),4) * 100 END	as	BSS_HHO_SUC_RATE	,
		CASE WHEN SUM(S_SHO_ATT) = 0 THEN 0 ELSE ROUND(SUM(S_SHO_SUC)/SUM(S_SHO_ATT) * 100,2) END	as	S_SHO_SUC_RATE	,
		CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END	as	TCH_DROP_RATE	,
		CASE WHEN SUM(TCH_DROP_NUM)=0 THEN 0 ELSE ROUND(SUM(TRAFFIC_CS)*60/SUM(TCH_DROP_NUM),2) END	as	TRAFFIC_DROP_RATE	,
		SUM(TCH_DROP_NUM)	as	TCH_DROP_NUM	,
		SUM(CALL_ATT)	as	CALL_ATT	,
		SUM(TCH_SETUP_ATT)	as	TCH_SETUP_ATT	,
		SUM(TCH_ASSIGN_SUC)	as	TCH_ASSIGN_SUC	,
		SUM(TCH_SETUP_SUC)	as	TCH_SETUP_SUC	,
		SUM(TCH_ASSIGN_ATT)	as	TCH_ASSIGN_ATT	,
		SUM(TCH_BLOCK_COUNT)	as	TCH_BLOCK_COUNT	,
		SUM(SHO_TRAFFIC_CS)	as	SHO_TRAFFIC_CS	,
		SUM(TRAFFIC_CS)	as	TRAFFIC_CS	,
		SUM(WALSHCODE_ERL)	as	WALSHCODE_ERL	,
		SUM(O_TCH_ASSIGN_ATT)	as	O_TCH_ASSIGN_ATT	,
		SUM(O_TCH_ASSIGN_SUC)	as	O_TCH_ASSIGN_SUC	,
		CASE WHEN SUM(CALL_ATT - CALL_SETUP_SUCC_CS)&lt;0 THEN 0 ELSE SUM(CALL_ATT - CALL_SETUP_SUCC_CS) END	as	CALL_FAILED_NUM	,
		SUM(WIRELESS_CAPACITY)	as	WIRELESS_CAPACITY	,
		CASE WHEN AVG(WIRELESS_CAPACITY) = 0 THEN 0 ELSE ROUND(AVG(TRAFFIC_1X_REV_ALL) / AVG(WIRELESS_CAPACITY) * 100, 3) END	as	TCH_LOAD_RATIO	,
		ROUND(SUM(TRAFFIC_1X_REV_ALL),3)	as	TRAFFIC_1X_REV_ALL	,
		(100-((CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END*1.3)+(100-(CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END))))	as	CALL_AVG_RATE	,
		CASE WHEN SUM(TCH_ASSIGN_SUC_UN) = 0 THEN 0 ELSE  ROUND(SUM(TCH_DROP_NUM)/SUM(TCH_ASSIGN_SUC_UN)* 100,3) END	as	CALL_AVG_RATE1	,
		CASE WHEN SUM(CALL_ATT) = 0 THEN 100 ELSE   ROUND(SUM(CALL_SETUP_SUCC_CS)/SUM(CALL_ATT),4) * 100 END	as	CALL_AVG_RATE2	,
		ROUND(SUM(DATA_THROUGHPUT_FWD_1X)/1000/1024,3)	as	THROUGHPUT_FWD_1X	,
		SUM(INTER_BSC_HHO_ADD_ATT_VOICE)	as	INTER_BSC_HHO_ADD_ATT_VOICE	,
		SUM(INTER_BSC_HHO_ADD_SUC_VOICE)	as	INTER_BSC_HHO_ADD_SUC_VOICE	,
		CASE WHEN SUM(INTER_BSC_HHO_ADD_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_ADD_SUC_VOICE)/SUM(INTER_BSC_HHO_ADD_ATT_VOICE)*100,2) END	as	INTER_BSC_HHO_ADD_SUC_RAT	,
		SUM(INTER_BSC_HHO_OFF_ATT_VOICE)	as	INTER_BSC_HHO_OFF_ATT_VOICE	,
		SUM(INTER_BSC_HHO_OFF_SUC_VOICE)	as	INTER_BSC_HHO_OFF_SUC_VOICE	,
		CASE WHEN SUM(INTER_BSC_HHO_OFF_ATT_VOICE)=0 THEN 0 ELSE ROUND(SUM(INTER_BSC_HHO_OFF_SUC_VOICE)/SUM(INTER_BSC_HHO_OFF_ATT_VOICE)*100,2) END	as	INTER_BSC_HHO_OFF_SUC_RAT	,
		ROUND(ABS(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSI_DIV_AVG-RSSIAVG ELSE AVG_RSSI_M-AVG_RSSI_D END)),4)	as	RSSI_MAIN_DIV_AVG_DIFF	,
		ROUND(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSI_DIV_AVG ELSE AVG_RSSI_D END),4)	as	RSSI_DIV_AVG	,
		ROUND(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSIAVG ELSE AVG_RSSI_M END),4)	as	RSSIAVG	,
		ROUND(AVG(RSSIPEAK),3)	as	RSSIPEAK	,
		ROUND(AVG(RSSIAV),3)	as	RSSIAV	,
		CASE WHEN vendor='ZY0808' THEN ROUND(AVG(PCH_AVG_USAGE),2)
		WHEN VENDOR = 'ZY0804' THEN CASE WHEN SUM(PCH_CANTRANSMIT_1X)=0 THEN 0 ELSE ROUND(SUM(PCH_ACTUALTRANSMIT_1X)/SUM(PCH_CANTRANSMIT_1X)*100,2) END	
		ELSE ROUND(AVG(PCOP),4)*100	END as   PCH_AVG_USAGE  
	from perf_carr_c				
	where start_time =  to_date('%%Y-%%M-%%D %%H','yyyy-mm-dd hh24')	
	and carr in (201,283,242)	
	and city_id = ${city_id}			
	group by 	CHINA_NAME	,		
		CITY_ID	,		
		RELATED_BSCNAME	,		
		VENDORNAME	,		
		CARR	,		
		CELL	,		
		BTS	,		
		BSC	,		
		to_char(start_time,'yyyy-mm-dd hh24')		,
		VENDOR	
	order by VENDORNAME,	CITY_ID	,		
		BSC	,		
		BTS	,		
		CELL	,		
		CARRIER			
				</sql>
			</mapping>
			<mapping name="GD_PERF_CARR_DO_${city_id}_%%Y%%M%%D%%H.txt" templet="ATM无线网络优化-PERF-CARR-DO.ftl" >
				<sql> 
					select	to_char(start_time,'yyyy-mm-dd hh24')	as	START_TIME	,
							CITY_ID	,
							CHINA_NAME	,
							RELATED_BSCNAME	AS BSCNAME,
							VENDORNAME	,
							CARR	as	CARRIER	,
							CELL	,
							BTS	,
							BSC	,
					SUM(TRAFFIC_DO_COMMON)	as	TRAFFIC_DO_COMMON	,
					CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END	as	DO_SUC_CONN_RATE	,
					ROUND(AVG(DO_TCH_AVG_SLOT_OCCUPY_RATE),2)	as	DO_TCH_AVG_SLOT_OCCUPY_RATE	,
					ROUND(SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)/1024/1024,3)	as	DO_FTCH_RLP_TX	,
					ROUND(SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)/1024/1024,3)	as	DO_RTCH_RLP_TX	,
					SUM(DO_CONN_ATT)	as	DO_CONN_ATT	,
					SUM(DO_SUC_CONN_NUM)	as	DO_SUC_CONN_NUM	,
					SUM(DO_CONN_ATT- DO_SUC_CONN_NUM)	as	CONN_FAILED_NUM_DO	,
					SUM(DO_DROP_NUM)	as	DO_DROP_NUM	,
					ROUND(SUM(DO_RLP_FLOWRATE)/1024/1024,3)	as	DO_RLP_FLOWRATE	,
					SUM(nvl(DROPCALLNUM_OTHER_DO,0))	as	DROPCALLNUM_OTHER_DO	,
					SUM(nvl(DROPCALLNUM_HARDHOFAIL_DO,0))	as	DROPCALLNUM_HARDHOFAIL_DO	,
					SUM(nvl(DROPCALLNUM_RFLOSE_DO,0))	as	DROPCALLNUM_RFLOSE_DO	,
					SUM(DO_SUC_CONN)	as	DO_SUC_CONN_DO	,
					CASE WHEN SUM(DO_SUC_CONN) = 0 THEN 0 ELSE ROUND(SUM(DO_DROP_NUM)/SUM(DO_SUC_CONN),4)*100 END	as	DO_DROP_RATE_2_22	,
					ROUND(SUM(EQU_USER_NUM_DO),3)	as	EQU_USER_NUM_DO	,
					CASE WHEN SUM(UATI_ATT_NUM) = 0 THEN 0 ELSE ROUND(SUM(UATI_SUC_NUM)/SUM(UATI_ATT_NUM),4)*100 END	as	UATI_ASSIGN_SUC_RATE_3_1	,
					SUM(UATI_ATT_NUM)	as	UATI_ATT_NUM_3_2	,
					SUM(UATI_SUC_NUM)	as	UATI_SUC_NUM_3_3	,
					SUM(DRC_FWD_LESS_3072_DO)	as	DRC_FWD_LESS_3072_DO	,
					SUM(DRC_FWD_3072_1228_DO)	as	DRC_FWD_3072_1228_DO	,
					SUM(DRC_FWD_MORE_1228_DO)	as	DRC_FWD_MORE_1228_DO	,
					CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_LESS_3072_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END	as	DRC_FWD_LESS_3072_RATE	,
					CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_3072_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END	as	DRC_FWD_3072_1228_RATE	,
					CASE WHEN SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO)=0 THEN 0 ELSE ROUND(100*SUM(DRC_FWD_MORE_1228_DO)/SUM(DRC_FWD_LESS_3072_DO+DRC_FWD_3072_1228_DO+DRC_FWD_MORE_1228_DO),3) END	as	DRC_FWD_MORE_1228_RATE	,
					CASE WHEN SUM(INN_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_BS_SHO_SUC_DO)/SUM(INN_BS_SHO_ATT_DO),3) END	as	INN_BS_SHO_SUC_RATE	,
					SUM(INN_BS_SHO_ATT_DO)	as	INN_BS_SHO_ATT_DO	,
					SUM(INN_BS_SHO_SUC_DO)	as	INN_BS_SHO_SUC_DO	,
					CASE WHEN SUM(INTER_BS_SHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_BS_SHO_SUC_DO)/SUM(INTER_BS_SHO_ATT_DO),3) END	as	INTER_BS_SHO_SUC_RATE	,
					SUM(INTER_BS_SHO_ATT_DO)	as	INTER_BS_SHO_ATT_DO	,
					SUM(INTER_BS_SHO_SUC_DO)	as	INTER_BS_SHO_SUC_DO	,
					CASE WHEN SUM(INN_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INN_AN_HHO_SUC_DO)/SUM(INN_AN_HHO_ATT_DO),3) END	as	INN_AN_HHO_SUC_RATE	,
					SUM(INN_AN_HHO_ATT_DO)	as	INN_AN_HHO_ATT_DO	,
					SUM(INN_AN_HHO_SUC_DO)	as	INN_AN_HHO_SUC_DO	,
					CASE WHEN SUM(INTER_AN_HHO_ATT_DO)=0 THEN 0 ELSE ROUND(100*SUM(INTER_AN_HHO_SUC_DO)/SUM(INTER_AN_HHO_ATT_DO),3) END	as	INTER_AN_HHO_SUC_RATE	,
					SUM(INTER_AN_HHO_ATT_DO)	as	INTER_AN_HHO_ATT_DO	,
					SUM(INTER_AN_HHO_SUC_DO)	as	INTER_AN_HHO_SUC_DO	,
					ROUND(AVG(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO)*8/1000/3600,3)	as	FTCH_RLP_TX_DO_6_5	,
					CASE WHEN SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) = 0 THEN 0 ELSE ROUND(SUM(FTCH_RLP_RETX_DO)/SUM(DO_FTCH_RLP_TX+FTCH_RLP_RETX_DO) * 100,2) END	as	FTCH_RLP_RATE_6_5	,
					ROUND(AVG(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)*8/1000/3600,3)	as	RTCH_RLP_TX_DO_6_7	,
					CASE WHEN SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO)=0 THEN 0 ELSE ROUND(SUM(RTCH_RLP_RETX_DO)/SUM(DO_RTCH_RLP_TX+RTCH_RLP_RETX_DO) * 100,4) END	as	RTCH_RLP_RETX_RATE_6_8	,
					(100-((100-(CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END))*1.3+(CASE WHEN SUM(CONN_SUC_DO)=0 THEN 0 ELSE ROUND(SUM(CALL_DROP_DO) / SUM(CONN_SUC_DO) * 100, 3) END)))	as	THREEG_AVG_RATE	,
					CASE WHEN SUM(DO_CONN_ATT)=0 THEN 0 ELSE ROUND(SUM(DO_SUC_CONN_NUM) / SUM(DO_CONN_ATT) * 100, 2) END	as	THREEG_AVG_RATE1	,
					CASE WHEN SUM(DO_SUC_CONN) = 0 THEN 0 ELSE ROUND(SUM(DO_DROP_NUM)/SUM(DO_SUC_CONN),4)*100 END	as	THREEG_AVG_RATE2	,
					SUM(DO_CONN_ATT)-SUM(DO_SUC_CONN_NUM)	as	DO_FAIL_CONN_NUM	,
					ROUND(SUM(HRPD_SESS_SETUP_SUC_DO),3)	as	HRPD_SESS_SETUP_SUC_DO	,
					ROUND(SUM(AT_CONN_SUC_DO),3)	as	AT_CONN_SUC_DO	,
					ROUND(SUM(AT_CONN_ATT_DO),3)	as	AT_CONN_ATT_DO	,
					ROUND(SUM(AN_CONN_SUC_DO),3)	as	AN_CONN_SUC_DO	,
					ROUND(SUM(AN_CONN_ATT_DO),3)	as	AN_CONN_ATT_DO	,
					SUM(RTCH_RLP_TX_DO)	as	RTCH_RLP_TX_DO	,
					CASE WHEN SUM(HRPD_SESS_SETUP_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(HRPD_SESS_SETUP_SUC_DO) / SUM(HRPD_SESS_SETUP_ATT_DO) * 100, 3) END	as	HRPD_SESS_SETUP_SUC_RATE_DO	,
					CASE WHEN SUM(RTCH_RLP_TX_DO)=0 THEN 0 ELSE ROUND(SUM(RTCH_RLP_RETX_DO) / SUM(RTCH_RLP_TX_DO) /1000 * 100, 3) END	as	RTCH_RLP_RETX_RATE_DO	,
					CASE SUM(FTCH_RLP_TX_DO) WHEN 0 THEN 0 ELSE ROUND(SUM(FTCH_RLP_RETX_DO)/SUM(FTCH_RLP_TX_DO) * 100, 3) END	as	FTCH_RLP_RETX_RATE_DO	,
					ROUND(SUM(FTCH_RLP_TX_DO),3)	as	FTCH_RLP_TX_DO	,
					ROUND(SUM(HRPD_SESS_SETUP_ATT_DO),3)	as	HRPD_SESS_SETUP_ATT_DO	,
					ROUND(SUM(AUTH_SUC_DO),3)	as	AUTH_SUC_DO	,
					CASE WHEN SUM(AN_CONN_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AN_CONN_SUC_DO) / SUM(AN_CONN_ATT_DO) * 100, 3) END	as	AN_CONN_SUC_RATE_DO	,
					CASE WHEN SUM(AT_CONN_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AT_CONN_SUC_DO) / SUM(AT_CONN_ATT_DO) * 100, 3) END	as	AT_CONN_SUC_RATE_DO	,
					CASE WHEN SUM(CONN_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(CONN_SUC_DO) / SUM(CONN_ATT_DO) * 100, 3) END	as	CONN_SUC_RATE_DO	,
					ROUND(SUM(AUTH_ATT_DO),3)	as	AUTH_ATT_DO	,
					CASE WHEN SUM(AUTH_ATT_DO)=0 THEN 0 ELSE ROUND(SUM(AUTH_SUC_DO) / SUM(AUTH_ATT_DO) * 100, 3) END	as	AUTH_SUC_RATE_DO	,
					CASE WHEN SUM(DO_FWD_SLOT)=0 THEN 0 ELSE ROUND(SUM(DO_FWD_BYTE)*8/1000/(SUM(DO_FWD_SLOT)*0.001667),2) END	as	FWD_RLP_AVG_RATE	,
					CASE WHEN SUM(CONN_ATT_NUM_A8_A10)=0 THEN 0 ELSE ROUND(100*SUM(CONN_SUC_NUM_A8_A10)/SUM(CONN_ATT_NUM_A8_A10),2) END	as	CONN_SUC_RATIO_A8_A10	,
					SUM(CONN_SUC_NUM_A8_A10)	as	CONN_SUC_NUM_A8_A10	,
					SUM(CONN_ATT_NUM_A8_A10)	as	CONN_ATT_NUM_A8_A10	,
					ROUND(AVG(DO_TCH_AVG_SLOT_OCCUPY_RATE),3)	as	DO_TCH_AVG_SLOT_OCCUPY_RATE1	,
					ROUND(AVG(FWD_PHY_CCH_SLOT_RATE_DO),3)	as	FWD_PHY_CCH_SLOT_RATE_DO	,
					ROUND(AVG(AVG_ACH_USAGE_DO),3)	as	AVG_ACH_USAGE_DO	,
					ROUND(AVG(REV_LINK_BUSY_RATIO_DO),3)	as	REV_LINK_BUSY_RATIO_DO	,
					ROUND(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSI_DIV_AVG ELSE AVG_RSSI_D END),4)	as	RSSI_DIV_AVG	,
					ROUND(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSIAVG ELSE AVG_RSSI_M END),4)	as	RSSIAVG	,
					ROUND(ABS(AVG(CASE WHEN VENDOR = 'ZY0808' THEN RSSI_DIV_AVG-RSSIAVG ELSE AVG_RSSI_M-AVG_RSSI_D END)),4)	as	RSSI_MAIN_DIV_AVG_DIFF	,
					ROUND(AVG(RSSIPEAK),3)	as	RSSIPEAK	,
					ROUND(AVG(RSSIAV),3)	as	RSSIAV	
				from perf_carr_c				
				where start_time =  to_date('%%Y-%%M-%%D %%H','yyyy-mm-dd hh24')
				and carr in (37,78,119,160)		
				and city_id = ${city_id}	
				group by 	CHINA_NAME	,		
					CITY_ID	,		
					RELATED_BSCNAME	,		
					VENDORNAME	,		
					CARR	,		
					CELL	,		
					BTS	,		
					BSC	,		
					to_char(start_time,'yyyy-mm-dd hh24')			
				order by VENDORNAME,	CITY_ID	,		
					BSC	,		
					BTS	,		
					CELL	,		
					CARRIER			
				</sql>
			</mapping>
		</resolve>
	</to>

	<!-- 传输接口, 当只有path属性在时候为本地接口，其他则为远程接口 -->
	<ti id="1" after="1">
		<property name="ftpip">192.168.15.99</property>
		<property name="port">21</property>
		<property name="username">yinhl</property>
		<property name="password">123</property>
		<property name="path">/FTP/PERF/</property><!--可以配置通配符 -->
		<property name="encode">UTF-8</property>
	</ti>
	<t>
		<action id="1" toid="1" tiid="1" strategyid="1" /><!--数据库方式 -->
	</t>

	<!-- 默认失败不处理 0:正常 1: 2: -->
	<strategy id="1">
		<property name="failure">1,2,3</property>
	</strategy>

	<!-- before ,after ,exception -->
	<trigger id="1" class="" />
	<trigger id="2" class="" />
</config>