<?xml version="1.0" encoding="utf-8" ?>
<config>
        <include>
			<property name="mapping">mapping.xml</property>
			<property name="loop">true</property>
        </include>

	<!-- 100: db 200:file(200:local file , 201: ftp file) 300:socket 400:others -->
	<ds id="1" type="100">
		<property name="url">jdbc:oracle:thin:@192.168.0.180:1521:uway</property>
		<property name="driver">oracle.jdbc.driver.OracleDriver</property>
		<property name="username">cnoap</property>
		<property name="password">uwaysoft2009</property>
	</ds>
	<!-- to 与 resolve 是一对多关系, package为可选标签 -->
	<to id="1">
		<resolve dsid="1">

<!-- 省际边界参数数据  华为  HW基础字段 （重要）HWCM=HW COMMON -->
			<!-- 省际边界参数数据  华为：1X同频载频-->
			<!-- 
				<mapping name="${province_en}_PARA_VCARRNBRSF_HW_1X_%%Y%%M%%D.csv" templet="其他数据上报配置省际边界.ftl">
				<sql> select 
			       pro.omc_name || '.' || pro.bsc_name || '.' || pro.bts_id || '.' ||
			       pro.cell_id || '.' || pro.carr_seq as "源省际边界载扇标识",
			       '%%Y-%%M-%%D' as "时间戳",
			       '${province_cn}' as "省份",
			       pro.city_name as "城市",
			       pro.MSC_NAME as "源载扇所属MSC标识",
			       pro.mgw as "源载扇所属MGW标识",
			       pro.omc_name || '.' || pro.bsc_name as "源载扇所属BSC标识",
			       pro.omc_name || '.' || pro.bsc_name || '.' || pro.bts_id as "源载扇所属BTS标识",
			       pro.omc_name || '.' || pro.bsc_name || '.' || pro.bts_id || '.' ||
			       pro.cell_id as "源载扇所属扇区标识",
			       replace(pro.cell_name, ',', '，') as "源载扇所属扇区名称",
			       pro.cell_id as "源载扇所属扇区编号",
			       pro.carr_seq as "源载波编号",
			       pro.carr_id as "源载波频点",
			       pro.pn as "源pn",
			       pro.nbrseq as "邻区顺序",
			       pro.switchtype as "切换方法",
			       pro.nei_sid || '_' || pro.nei_bts_id || '_' || pro.nei_ne_pn || '_' ||
			       pro.nei_carr_id as "邻载扇标识",
			       pro.nei_county_name as "邻载扇行政区",
			       pro.nei_msc_nam as "邻载扇所属MSC标识",
			       pro.nei_mgw as "邻载扇所属MGW标识",
			       pro.nei_bsc_id as "邻载扇所属BSC标识",
			       pro.nei_bts_id as "邻载扇所属BTS标识",
			       pro.nei_cell_id as "邻载扇所属扇区标识",
			       pro.nei_cell_name as "邻扇区名称",
			       pro.nei_cell_id as "邻扇区编号",
			       pro.nei_carr_seq as "邻载波标识",
			       pro.nei_carr_id as "邻载波频点",
			       pro.nei_ne_pn as "邻pn",
			       pro.nei_province_name as "邻扇区所属省",
			       pro.nei_city_name as "邻扇区所属城市",
			       pro.bordertype as "邻扇区边界类型",
			       case pro.nei_vendor
			         when 'ZY0808' then
			          '华为'
			         when 'ZY0804' then
			          '中兴'
			         when 'ZY0810' then
			          '朗讯'
			       end as "邻扇区所属厂家",
			       pro.isouter as "是否为外部邻区",
			       pro.CCDMACH as "中心载频",
			       pro.NBRCDMACH as "相邻载频",
			       pro.SFRSN as "同频优先级",
			       pro.PARA_CCDMACH as "中心载频",
			       pro.PARA_NBRCDMACH as "相邻载频",
			       pro.PARA_NSRCHWININC as "是否包含相邻集分支搜索窗口大小",
			       pro.PARA_NSRCHWINSIZE as "相邻集分支搜索窗口大小",
			       pro.PARA_NSRCHWINOFFSETINC as "是否包含相邻集分支搜索窗口偏置",
			       pro.PARA_NSRCHWINOFFSET as "相邻集分支搜索窗口偏置",
			       pro.PARA_SRCHP as "搜索优先级"
			from  MOD_PRO_BORDER_HW_1XSF pro  where STAMPTIME >=to_date('2011-09-11','yyyy-mm-dd')
				</sql>
			</mapping>
			
			-->
			
			<mapping name="${province_en}_CDL_${city_en}_1X_%%Y%%M%%D10.csv.gz" templet="话单数据1X忙时后台.ftl">
				<sql>select '%%Y-%%M-%%D 10:00:00' as curr_data_time,city_id, city_name, showserial, longitude_lb, latitude_lb, longitude_rb, latitude_rb, longitude_center, latitude_center, ne_sys_id_center, iscal, gridstartid, scale, vendor, pnincrease, max_grid_m, max_grid_n, version, sid, enname, order_index, city_sign from cfg_city where city_id=${city_id}</sql>
				<sql>select key,
		          sum(nvl(voice_call_num,0)) as voice_call_num,
		          sum(nvl(data_call_num,0)) as data_call_num,
		          sum(nvl(sms_call_num,0)) as   sms_call_num,
		          sum(nvl(voice_drop_num,0)) as voice_drop_num,
		          sum(nvl(data_drop_num,0)) as data_drop_num,
		          sum(nvl(sms_drop_num,0)) as sms_drop_num,
		          sum(nvl(accesspnstravg,0)) as accesspnstravg
		          
		          from (select longitude * 100 || latitude * 100 key,
		          
		          voice_call_num,
		          voice_drop_num,
		          data_call_num,
		          data_drop_num,
		          sms_call_num,
		          sms_drop_num,
		          accesspnstravg

		          from (select
		          trunc(to_number(substr(GRID_ID, length(GRID_ID) - 4, 5)) / 1000,
		          2.1) as latitude,
		          trunc(to_number(substr(grid_id, 0, length(grid_id)
		          - 5)) / 1000,
		          2.1) as longitude,
		          t.voice_call_num,
		          t.voice_drop_num,
		          t.data_call_num,
		          t.data_drop_num,
		          t.sms_call_num,
		          t.sms_drop_num,
		          t.accesspnstravg
		          
		          from mod_cdl_grid t
		          where city_id=20 and
		          start_time >= to_date('2010-01-01 10:00:00',
		          'YYYY-MM-DD HH24:MI:SS')
		          order by longitude))
		          group by key</sql>
		    </mapping>
		    
		</resolve>
	</to>
	<!-- 传输接口, 当只有path属性在时候为本地接口，其他则为远程接口 -->
	<ti id="1" after="1">
		<property name="ftpip">192.168.0.113</property>
		<property name="port">21</property>
		<property name="username">litp</property>
		<property name="password">litp</property>
		<property name="path">/erc/aaa/bbb/</property><!--可以配置通配符 -->
	</ti>
	<ti id="2" after="1">
		<property name="ftpip">192.168.0.132</property>
		<property name="port">21</property>
		<property name="username">test</property>
		<property name="password">test</property>
		<property name="path">/erc/</property><!--可以配置通配符 -->
		<property name="encode">utf-8</property>
	</ti>

	<t>
		<action id="1" toid="1" tiid="2" strategyid="1" /><!--ftp文件方式 -->
	</t>

	<!-- 默认失败不处理 0:正常 1: 2: -->
	<strategy id="1">
		<property name="failure">1,2,3</property>
	</strategy>

	<!-- before ,after ,exception -->
	<trigger id="1" class="" />
	<trigger id="2" class="" />
</config>